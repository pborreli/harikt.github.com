<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Random thoughts | Hari KT]]></title>
  <link href="http://harikt.com/atom.xml" rel="self"/>
  <link href="http://harikt.com/"/>
  <updated>2013-11-16T11:49:51+05:30</updated>
  <id>http://harikt.com/</id>
  <author>
    <name><![CDATA[Hari K T]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Composer support for ProcessWire modules]]></title>
    <link href="http://harikt.com/blog/2013/11/16/composer-support-for-processwire-modules/"/>
    <updated>2013-11-16T11:22:00+05:30</updated>
    <id>http://harikt.com/blog/2013/11/16/composer-support-for-processwire-modules</id>
    <content type="html"><![CDATA[<p>I am a huge fan of <a href="http://getcomposer.org/" title="External link">composer</a>. <a href="http://processwire.com/">PW</a> ( ProcessWire) is missing one of the good parts of <a href="http://getcomposer.org/" title="External link">composer</a>.
So here is a <a href="https://github.com/harikt/pwmoduleinstaller">new installer</a>
to install the 3rd party modules of <a href="http://processwire.com/">PW</a> via <a href="http://getcomposer.org/" title="External link">composer</a>.</p>

<p>If you have created a module for PW, what you need to do is add a
<code>composer.json</code> file in your <a href="https://github.com/harikt/Assets/blob/master/composer.json" title="External link">github repo</a> and add it to <a href="https://packagist.org" title="External link">packagist</a>.
An example <a href="https://github.com/harikt/Assets/blob/master/composer.json" title="External link">composer.json</a> is</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;vendor/package-name&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;pw-module&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;description&quot;</span><span class="p">:</span> <span class="s2">&quot;Your module what it does&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;keywords&quot;</span><span class="p">:</span> <span class="p">[</span> <span class="s2">&quot;keywords&quot;</span><span class="p">,</span> <span class="s2">&quot;comma&quot;</span><span class="p">,</span> <span class="s2">&quot;seprated&quot;</span><span class="p">],</span>
</span><span class='line'>    <span class="nt">&quot;homepage&quot;</span><span class="p">:</span> <span class="s2">&quot;https://github.com/harikt/Assets&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;license&quot;</span><span class="p">:</span> <span class="s2">&quot;BSD-2-Clause&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;authors&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Assets Contributors&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;homepage&quot;</span><span class="p">:</span> <span class="s2">&quot;https://github.com/harikt/Assets/contributors&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="nt">&quot;require&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;php&quot;</span><span class="p">:</span> <span class="s2">&quot;&gt;=5.3.0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;hari/pw-module&quot;</span><span class="p">:</span> <span class="s2">&quot;dev-master&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note the minimum requirement is PHP 5.3 for composer is 5.3 .</p>

<p>An example of a module that works with this is <a href="https://github.com/harikt/Assets">https://github.com/harikt/Assets</a>
( Move the index.php to any where :&ndash;) ).
You are read more about Assets from <a href="http://harikt.com/blog/2013/11/08/assets-for-processwire/">here</a></p>

<h2>Installing modules</h2>

<p>How do you install the PW modules and the 3rd party dependencies ? Assuming you are in the PW folder.</p>

<p>First download composer from <a href="http://getcomposer.org/download/">http://getcomposer.org/download/</a>.</p>

<p>Hope you have <code>composer.phar</code> now.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>php composer.phar require vendor/package-name version-name
</span></code></pre></td></tr></table></div></figure>


<p>Will install if the <code>vendor/package-name</code> to <code>site/modules/PackageName</code>.
All packages <code>vendor/package-name</code> of <code>"type": "pw-module"</code> will be converted to <code>PackageName</code>.</p>

<p>Example you can try</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>php composer.phar require hari/assets dev-master
</span></code></pre></td></tr></table></div></figure>


<p>Try the above and see where it is installed. If you are a module maintainer,
please add a <code>composer.json</code> to your github module and add it to <a href="https://packagist.org" title="External link">packagist</a>.</p>

<p>Of-course inspired and modified composer installer from
<a href="https://github.com/auraphp/installer-system">Aura Project for PHP</a></p>

<p>Thank you. Happy PhPing!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Assets for Processwire]]></title>
    <link href="http://harikt.com/blog/2013/11/08/assets-for-processwire/"/>
    <updated>2013-11-08T17:35:00+05:30</updated>
    <id>http://harikt.com/blog/2013/11/08/assets-for-processwire</id>
    <content type="html"><![CDATA[<p><a href="http://processwire.com/">Processwire</a> is a content management framework.</p>

<p>I was looking to change the directory structure of the Processwire.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>|-- index.php
</span><span class='line'>|-- installer.php
</span><span class='line'>|-- README.md
</span><span class='line'>|-- site
</span><span class='line'><span class="sb">`</span>-- wire
</span></code></pre></td></tr></table></div></figure>


<p>I am not the first person to talk on the subject. There are other threads
like
<a href="http://processwire.com/talk/topic/876-installation-paths-and-moving-folders/">Installation paths and moving folders</a>,
<a href="http://processwire.com/talk/topic/3445-common-practices/">Common practices</a></p>

<p>Anyway I thought of trying the same and for serving the <code>js</code>, <code>css</code>, <code>images</code>
I wrote my first processwire module <a href="https://github.com/harikt/Assets">Assets</a></p>

<p>Some of the portions are from
<a href="https://github.com/auraphp/Aura.Framework/blob/f122f77b7f97d3bec9dbf930a66e706d2b89b6f8/src/Aura/Framework/Web/Asset/Page.php#L123-L147">Aura.Framework</a>
and <a href="https://github.com/auraphp/Aura.View/blob/613286b1122bd7ef78a12550afdb10f78813d040/src/Aura/View/FormatTypes.php#L31-L113">Aura.View</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>|-- cli
</span><span class='line'>|-- composer.json
</span><span class='line'>|-- index.php <span class="o">(</span> which is moved to web folder <span class="o">)</span>
</span><span class='line'>|-- installer.php
</span><span class='line'>|-- README.md
</span><span class='line'>|-- site
</span><span class='line'>|   |-- assets
</span><span class='line'>|   |-- config.php
</span><span class='line'>|   |-- hello.css
</span><span class='line'>|   |-- install
</span><span class='line'>|   |-- modules
</span><span class='line'>|   <span class="sb">`</span>-- templates
</span><span class='line'>|-- vendor <span class="o">(</span>3rd party vendors from PHP, Eg: Aura.Includer <span class="o">)</span>
</span><span class='line'>|-- httpdocs <span class="o">(</span> you can name this folder what ever you like <span class="o">)</span>
</span><span class='line'>|   |-- index.php
</span><span class='line'>|   |-- site <span class="o">(</span> css, js and images copied from realpath <span class="o">)</span>
</span><span class='line'>|   <span class="sb">`</span>-- wire <span class="o">(</span> css, js and images copied from realpath <span class="o">)</span>
</span><span class='line'><span class="sb">`</span>-- wire
</span><span class='line'>    |-- config.php
</span><span class='line'>    |-- core
</span><span class='line'>    |-- index.config.php
</span><span class='line'>    |-- modules
</span><span class='line'>    |-- README.txt
</span><span class='line'>    <span class="sb">`</span>-- templates-admin
</span></code></pre></td></tr></table></div></figure>


<p>You also need to change the <code>$rootPath</code> in <code>index.php</code> accordingly.
Hope someone will find it useful.
I am releasing it under <a href="http://opensource.org/licenses/BSD-2-Clause">BSD-2-Clause</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Aura Dispatcher in Silex]]></title>
    <link href="http://harikt.com/blog/2013/11/06/using-aura-dispatcher-in-silex/"/>
    <updated>2013-11-06T12:42:00+05:30</updated>
    <id>http://harikt.com/blog/2013/11/06/using-aura-dispatcher-in-silex</id>
    <content type="html"><![CDATA[<p>2 days back <a href="http://paul-m-jones.com/">Paul M Jones</a> wrote an awesome post
<a href="http://auraphp.com/blog/2013/11/04/aura-v2-dispatcher/">A Peek At Aura v2 &mdash; Aura.Dispatcher</a>
the idea behind <a href="http://github.com/auraphp/Aura.Dispatcher/">Aura.Dispatcher</a>
and how it was born.</p>

<p>So today, let us try to integrate
<a href="http://github.com/auraphp/Aura.Dispatcher">Aura.Dispatcher</a> with
<a href="https://github.com/silexphp/Silex">Silex</a>. This post is inspired by the
<a href="http://auraphp.com/blog/2013/11/04/aura-v2-dispatcher/#comment-1109657910">comment</a>
made by <a href="https://twitter.com/cordoval">Luis Cordova</a>. Thank you.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>composer create-project silex/silex --no-dev silexproject
</span><span class='line'><span class="nb">cd </span>silexproject
</span><span class='line'>composer require aura/dispatcher dev-develop-2
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>I hope you have composer installed else <a href="http://getcomposer.org/">get composer</a>.</p></blockquote>

<p>I am not going to explain each and everything, the code is self explanatory.
You can move the classes according to your wish (may be to another folder).
I am trying to show a simple use case.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">require</span> <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/vendor/autoload.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Dispatcher\Dispatcher</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$dispatcher</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Dispatcher</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$dispatcher</span><span class="o">-&gt;</span><span class="na">setMethodParam</span><span class="p">(</span><span class="s1">&#39;action&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$dispatcher</span><span class="o">-&gt;</span><span class="na">setObjectParam</span><span class="p">(</span><span class="s1">&#39;controller&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Blog</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">browse</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// ...</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">hello</span><span class="p">(</span><span class="nv">$name</span><span class="p">,</span> <span class="nv">$app</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="s1">&#39;Hello &#39;</span><span class="o">.</span> <span class="nx">ucfirst</span><span class="p">(</span><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">escape</span><span class="p">(</span><span class="nv">$name</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">edit</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s2">&quot;Here&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">exit</span><span class="p">;</span>
</span><span class='line'>        <span class="c1">// ...</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">add</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// ...</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">delete</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// ...</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$dispatcher</span><span class="o">-&gt;</span><span class="na">setObject</span><span class="p">(</span><span class="s1">&#39;blog&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">new</span> <span class="nx">Blog</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$app</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Silex\Application</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;/hello/{name}&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$name</span><span class="p">)</span> <span class="k">use</span> <span class="p">(</span><span class="nv">$dispatcher</span><span class="p">,</span> <span class="nv">$app</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$params</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>        <span class="s1">&#39;controller&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;blog&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;action&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;hello&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="nv">$name</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;app&#39;</span> <span class="o">=&gt;</span> <span class="nv">$app</span><span class="p">,</span>
</span><span class='line'>    <span class="p">];</span>
</span><span class='line'>    <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$dispatcher</span><span class="o">-&gt;</span><span class="na">__invoke</span><span class="p">(</span><span class="nv">$params</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$result</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">run</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>See how we moved the <code>return 'Hello '. ucfirst($app-&gt;escape($name));</code>
to a controller and action. I haven&rsquo;t used Silex extensively, so there
can be better ways for integration.</p>

<blockquote><p>Update : I was asking <a href="https://twitter.com/beausimensen">Beau D. Simensen</a>
on the integration, and he gave another shot.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1">// all code as same as above, upto the route</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;/hello/{name}&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$name</span><span class="p">)</span> <span class="k">use</span> <span class="p">(</span><span class="nv">$app</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span>
</span><span class='line'>        <span class="s1">&#39;controller&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;blog&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;action&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;hello&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="nv">$name</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;app&#39;</span> <span class="o">=&gt;</span> <span class="nv">$app</span><span class="p">,</span>
</span><span class='line'>    <span class="p">];</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">on</span><span class="p">(</span><span class="nx">\Symfony\Component\HttpKernel\KernelEvents</span><span class="o">::</span><span class="na">VIEW</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$event</span><span class="p">)</span> <span class="k">use</span> <span class="p">(</span><span class="nv">$app</span><span class="p">,</span> <span class="nv">$dispatcher</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$view</span> <span class="o">=</span> <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">getControllerResult</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">is_null</span><span class="p">(</span><span class="nv">$view</span><span class="p">)</span> <span class="o">||</span> <span class="nb">is_string</span><span class="p">(</span><span class="nv">$view</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="o">!</span> <span class="nb">is_array</span><span class="p">(</span><span class="nv">$view</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// we can only handle array data in the view</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$view</span><span class="p">[</span><span class="s1">&#39;controller&#39;</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="nb">isset</span><span class="p">(</span><span class="nv">$view</span><span class="p">[</span><span class="s1">&#39;action&#39;</span><span class="p">])))</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// at this point we don&#39;t know what is going on.</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$dispatcher</span><span class="p">(</span><span class="nv">$view</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="o">!</span> <span class="nv">$response</span> <span class="nx">instanceof</span> <span class="nx">\Symfony\Component\HttpFoundation\Response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// If the response is not a Response instance, wrap it in one</span>
</span><span class='line'>        <span class="c1">// and assume that it was something appropriate as a response</span>
</span><span class='line'>        <span class="c1">// body.</span>
</span><span class='line'>        <span class="nv">$response</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">\Symfony\Component\HttpFoundation\Response</span><span class="p">(</span><span class="nv">$response</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$event</span><span class="o">-&gt;</span><span class="na">setResponse</span><span class="p">(</span><span class="nv">$response</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">run</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>I have purposefully kept the full path like <code>\Symfony\Component\HttpFoundation\Response</code></p></blockquote>

<p>Hope you love <a href="http://github.com/auraphp/Aura.Dispatcher">Aura.Dispatcher</a>
and use when you need architecural changes.</p>

<p>Please do take time to read
<a href="https://github.com/auraphp/Aura.Dispatcher#refactoring-to-architecture-changes">Refactoring To Architecture Changes</a></p>

<p>Thank you and if you loved the post please do a tweet :&ndash;).</p>

<p>Happy PhPing!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[REST: Is DELETE Idempotent?]]></title>
    <link href="http://harikt.com/blog/2013/11/01/rest-is-delete-idempotent/"/>
    <updated>2013-11-01T05:28:00+05:30</updated>
    <id>http://harikt.com/blog/2013/11/01/rest-is-delete-idempotent</id>
    <content type="html"><![CDATA[<p>This post is a thrive to learn, and not to show anyone is incorrect.
Feel free to share your thoughts.</p>

<p>Lukas Kahwe Smith was having a nice post
<a href="https://blog.liip.ch/archive/2013/10/28/resting-with-symfony2.html">RESTing with Symfony2</a></p>

<p>Quoting a few words from the post on REST</p>

<h2>DELETE and 404</h2>

<blockquote><p>I started my talk on RESTing with Symfony2 with an introduction to REST itself.
On slide 7 of my talk I explained the concept of &ldquo;safe&rdquo; and
&ldquo;idempotent&rdquo; HTTP methods. Many people were surprised when I explained
that DELETE should be idempotent, meaning that sending a DELETE request
to a resource that has been removed should infact not return a 404.</p></blockquote>

<p>I am not a REST guru, but in fact I got curious on the same, and
was looking at http status <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.11">410 Gone</a></p>

<blockquote><p><a href="https://twitter.com/harikt">@harikt</a> 1st Q that must be answered is if
DELETE is idempotent. if it is then the status code shouldn&#39;t
change on subsequent delete requests
&mdash; Lukas Kahwe Smith (@lsmith) <a href="https://twitter.com/lsmith/statuses/395160219376164864">October 29, 2013</a></p></blockquote>

<h2>What is idempotent?</h2>

<p>Quoting from <a href="http://en.wikipedia.org/wiki/Idempotence">Wikipedia</a></p>

<blockquote><p>Idempotence is the property of certain operations in mathematics and
computer science, that can be applied multiple times without changing
the result beyond the initial application. The concept of idempotence
arises in a number of places in abstract algebra (in particular, in
the theory of projectors and closure operators) and functional
programming (in which it is connected to the property of referential transparency).</p>

<p>There are several meanings of idempotence, depending on what the concept is applied to:</p>

<ul>
<li>A unary operation (or function) is idempotent if, whenever it is applied twice to any value, it gives the same result as if it were applied once; i.e., ƒ(ƒ(x)) ≡ ƒ(x). For example, the absolute value: abs(abs(x)) ≡ abs(x).</li>
<li>A binary operation is idempotent if, whenever it is applied to two equal values, it gives that value as the result. For example, the operation giving the maximum value of two values is idempotent: max (x, x) ≡ x.</li>
<li>Given a binary operation, an idempotent element (or simply an idempotent) for the operation is a value for which the operation, when given that value for both of its operands, gives the value as the result. For example, the number 1 is an idempotent of multiplication: 1 × 1 = 1.</li>
</ul>
</blockquote>

<p>Christophe Coevoet also feel the same</p>

<blockquote><p><a href="https://twitter.com/lsmith">@lsmith</a> then 410 is probably the best status
code here, and 404 otherwise /cc <a href="https://twitter.com/harikt">@harikt</a> <a href="https://twitter.com/_m6w6">@_m6w6</a>
&mdash; Christophe Coevoet (@Stof70) <a href="https://twitter.com/Stof70/statuses/395193333347135488">October 29, 2013</a></p></blockquote>

<p>Why?</p>

<blockquote><p><a href="https://twitter.com/lsmith">@lsmith</a> The definition says &quot;without changing the result&quot;.
the HTTP spec says that the result is the state of the app <a href="https://twitter.com/_m6w6">@_m6w6</a> <a href="https://twitter.com/harikt">@harikt</a>
&mdash; Christophe Coevoet (@Stof70) <a href="https://twitter.com/Stof70/statuses/395193644585480192">October 29, 2013</a></p></blockquote>

<p><img src="http://harikt.com/assets/images/http-delete.png" alt=" Status code of DELETE " /></p>

<p>The above screenshot is limited, you can check all the messages passed from
<a href="https://twitter.com/harikt/status/395154834426314752">https://twitter.com/harikt/status/395154834426314752</a></p>

<p>Woke up early morning and I noticed a subsequent post
<a href="http://www.duckheads.co.uk/is-a-http-delete-requests-idempotent/491">Is a HTTP DELETE request idempotent?</a>
by Lee Davis. Interesting to read his thoughts on the same.
There was a nice discussion by <a href="http://www.jasonlotito.com/">Jason Lotito</a>,
do consider reading it.</p>

<p>I felt Jason Lotito is correct.</p>

<h2>Wikipedia has something to say aboout Idempotent methods</h2>

<p><a href="http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Idempotent_methods_and_web_applications">Hypertext Transfer Protocol Idempotent methods</a></p>

<blockquote><p>Methods PUT and DELETE are defined to be idempotent, meaning that multiple
identical requests should have the same effect as a single request
(Note that idempotence refers to the state of the system after the
request has completed, so while the action the server takes
(e.g. deleting a record) or the response code it returns may be
different on subsequent requests, the system state will be the same every time).</p></blockquote>

<p>So what does that mean?</p>

<p>Let us look into a real world example deleting <a href="http://example.com/post/121">http://example.com/post/121</a></p>

<p>We send a DELETE method via REST. What is going to happen?</p>

<p>I am quoting from
<a href="http://www.restapitutorial.com/lessons/httpmethods.html">http://www.restapitutorial.com/lessons/httpmethods.html</a></p>

<blockquote><p>On successful deletion, return HTTP status 200 (OK) along with a response body,
perhaps the representation of the deleted item (often demands too much bandwidth),
or a wrapped response (see Return Values below). Either that or
return HTTP status 204 (NO CONTENT) with no response body</p></blockquote>

<p>so far, so good.</p>

<p>What is going to happen on your subsequent request?</p>

<p>2nd time we are sending a DELETE method via REST, what do you expect to get?</p>

<p><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.5">204 No Content</a>. What does that mean?</p>

<blockquote><p>The server has fulfilled the request but does not need to return an
entity-body, and might want to return updated metainformation.</p></blockquote>

<p>No Content is a good status, which means the server has exectuted your
delete operation successfully is a wrong information.</p>

<p>iirc I have learned in Software Engineering, the wrong information
is too bad than sending an error. Eg : 5+2 returning 9. I read some where
at <a href="http://www.joelonsoftware.com/">http://www.joelonsoftware.com/</a> the bug
they want to deal with when he was at microsoft. ( If anyone have the link
please comment it)</p>

<p>So if you know that a request for <a href="http://example.com/post/121">http://example.com/post/121</a> is already
deleted, then <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.11">410 Gone</a>
will be the right status.</p>

<p>If you don&rsquo;t know <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.5">404 Not Found</a>
is the best status. Say it is not created, do we send 204?.</p>

<p>So here <a href="http://example.com/post/121">http://example.com/post/121</a> is already deleted.
(That means your subsequent response should be same,
note that not response status code)</p>

<p>It is upto your application how to deal with making it truely RESTful. Else
passing false information as response always is a wrong way.</p>

<p>I have also tried to get RSDL (RESTful Service Description Language)
<a href="http://en.wikipedia.org/wiki/RSDL#Maintainer">Maintainer</a> to know
the real information.</p>

<p>Probably I am wrong, but I am still learning REST.</p>

<p>Thank you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Conferences : Is it really worth?]]></title>
    <link href="http://harikt.com/blog/2013/10/29/conferences-is-it-really-worth/"/>
    <updated>2013-10-29T22:33:00+05:30</updated>
    <id>http://harikt.com/blog/2013/10/29/conferences-is-it-really-worth</id>
    <content type="html"><![CDATA[<p>What do you think, Is it really worth to go to a conference,
and spend so much money?</p>

<p>Yes, it is really worth. You don&rsquo;t know what will happen tomorrow.</p>

<p>These are some of the things that you can take from a conference</p>

<ul>
<li><p>Mingle with people and get new contacts</p></li>
<li><p>Learn from the mistakes they did</p></li>
<li><p>Not re-inveting the wheels others already did</p></li>
<li><p>Who knows whether you are getting new job opportunities ;&ndash;).</p></li>
<li><p>Improve your work from the experience you learned.</p></li>
</ul>


<p>I would like to give a shout at what I learned/earned going to conferences</p>

<ul>
<li><p>I got different job opportuntities and many new friends.</p></li>
<li><p>I was able to meet different prominent persons of the PHP community
like <a href="https://github.com/fabpot">Fabien Potencier</a>, <a href="https://github.com/vrana">Jakub Vrána</a>,
<a href="https://github.com/davidcoallier">David Coallier</a>, <a href="https://github.com/skwashd">Dave Hall</a>,
<a href="https://github.com/lapistano">Bastian Feder</a>, <a href="https://github.com/odino">Alessandro Nadalin</a>
and many more.</p></li>
</ul>


<p>Some of the conferences I attended are osidays 2010(as an attendee) and
2012 (as a speaker), yahoo open hack 2012, hasgeek events.
<a href="https://hasgeek.com/">Hasgeek</a> events are one of the best events.
One of the best conference I atteneded by Hasgeek
is <a href="https://fifthelephant.in/2012/">Fifth elephant</a>.
It is well organized and have strict timing. I got more interested in
data mining, analysis, processing etc.
Also got introduced to Hadoop and much more.</p>

<p>I wasn&rsquo;t aware where I will be using stuffs like <a href="http://gearman.org/">gearman</a>,
<a href="http://nltk.org/">nltk</a>, <a href="http://www.elasticsearch.org/">Elastic Search</a>,
<a href="http://graylog2.org/">GrayLog2</a>, <a href="http://www.logstash.net/">Log Stash</a> etc.
Fifth elephant and Yahoo open hack really helped me a lot to learn more about
what the people at the conference is working on, what are the challenges
they are facing, how they resolved etc.</p>

<p>If you are like me, who love to attend conference, but
unable to move to the location where it is happening,
then <a href="http://nomadphp.com/">NomadPHP</a> is looking at you.
One of the good feature is you can watch the videos later
(if you are unable to attend at the time).
Please Thank <a href="https://twitter.com/CalEvans">Cal Evans</a> for
the greatest initiative.</p>

<p>Do attend the talk by <a href="http://auraphp.com/">Aura PHP</a> guru
<a href="http://paul-m-jones.com/">Paul M Jones</a> who will be speaking for NomadPHP
titled <a href="http://nomadphp.com/2013/10/18/january-2014-eu/">A Stitch In Time Saves 9; or,Solving the N+1 Problem</a></p>

<p>Chek the site <a href="http://nomadphp.com/">NomadPHP</a> for more talks.</p>

<p>If you have a feeling like conferences just introduce stuffs,
and you are left to learn from there, then you should join
mastering <a href="http://objectorientedphpmasterclass.com/">Object Oriented PHP</a>
by <a href="http://www.brandonsavage.net">Brandon Savage</a></p>

<p>There is also a great initiative by
<a href="https://twitter.com/noufalibrahim">Noufal Ibrahim</a> called
<a href="http://thelycaeum.in/">The Lycaeum</a>, you can learn some Python.</p>

<p>So do attend a conference, and don&rsquo;t miss opportunities that are
looking at you tomorrow.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Looking at aura version 2]]></title>
    <link href="http://harikt.com/blog/2013/09/28/looking-at-aura-v2/"/>
    <updated>2013-09-28T06:53:00+05:30</updated>
    <id>http://harikt.com/blog/2013/09/28/looking-at-aura-v2</id>
    <content type="html"><![CDATA[<p>If you have noticed recently, there have been tons of commits from
<a href="https://github.com/pmjones">Paul M Jones</a>﻿ for aura version 2.</p>

<p>More standalone repos born. Everyone should try and give feedback as much as possible.</p>

<p>Interesting stuffs split from Aura.Sql v 1.3 are</p>

<p><a href="https://github.com/auraphp/Aura.Sql/tree/develop-2">Extended PDO</a>,</p>

<p>As the name says, it is an extended version of PDO. Good thing is it is
PHP 5.3 compatible.</p>

<p>If you have worked with PDO you know the good and bad.
One of the difficulty is, it cannot use an array for an in clause.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="c1">// the array to be quoted</span>
</span><span class='line'><span class="nv">$array</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;foo&#39;</span><span class="p">,</span> <span class="s1">&#39;bar&#39;</span><span class="p">,</span> <span class="s1">&#39;baz&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// the statement to prepare</span>
</span><span class='line'><span class="nv">$stm</span> <span class="o">=</span> <span class="s1">&#39;SELECT * FROM test WHERE foo IN (:foo) AND bar = :bar&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// the native PDO way does not work (PHP Notice:  Array to string conversion)</span>
</span><span class='line'><span class="nv">$pdo</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Pdo</span><span class="p">(</span><span class="o">...</span><span class="p">);</span>
</span><span class='line'><span class="nv">$sth</span> <span class="o">=</span> <span class="nv">$pdo</span><span class="o">-&gt;</span><span class="na">prepare</span><span class="p">(</span><span class="nv">$stm</span><span class="p">);</span>
</span><span class='line'><span class="nv">$sth</span><span class="o">-&gt;</span><span class="na">bindValue</span><span class="p">(</span><span class="s1">&#39;foo&#39;</span><span class="p">,</span> <span class="nv">$array</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>ExtendedPDO helps you to do it.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="nv">$pdo</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ExtendedPdo</span><span class="p">(</span><span class="o">...</span><span class="p">);</span>
</span><span class='line'><span class="nv">$stm</span> <span class="o">=</span> <span class="s1">&#39;SELECT * FROM test WHERE foo IN (:foo)&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$pdo</span><span class="o">-&gt;</span><span class="na">bindValues</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
</span><span class='line'>    <span class="s1">&#39;foo&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;foo&#39;</span><span class="p">,</span> <span class="s1">&#39;bar&#39;</span><span class="p">,</span> <span class="s1">&#39;baz&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="s1">&#39;bar&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;qux&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">));</span>
</span><span class='line'><span class="nv">$sth</span> <span class="o">=</span> <span class="nv">$pdo</span><span class="o">-&gt;</span><span class="na">prepare</span><span class="p">(</span><span class="nv">$stm</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="nv">$sth</span><span class="o">-&gt;</span><span class="na">queryString</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Try out an example, and see in action.</p>

<p>Your composer.json will look as</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;minimum-stability&quot;</span><span class="p">:</span> <span class="s2">&quot;dev&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;require&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;aura/sql&quot;</span><span class="p">:</span><span class="s2">&quot;dev-develop-2&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run the below Sql query in your favourite tools like phpmyadmin or adminer.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="c1">-- Adminer 3.7.1 MySQL dump</span>
</span><span class='line'>
</span><span class='line'><span class="k">SET</span> <span class="k">NAMES</span> <span class="n">utf8</span><span class="p">;</span>
</span><span class='line'><span class="k">SET</span> <span class="n">foreign_key_checks</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="k">SET</span> <span class="n">time_zone</span> <span class="o">=</span> <span class="s1">&#39;+05:30&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">SET</span> <span class="n">sql_mode</span> <span class="o">=</span> <span class="s1">&#39;NO_AUTO_VALUE_ON_ZERO&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">DROP</span> <span class="k">TABLE</span> <span class="n">IF</span> <span class="k">EXISTS</span> <span class="o">`</span><span class="n">polls_choice</span><span class="o">`</span><span class="p">;</span>
</span><span class='line'><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="o">`</span><span class="n">polls_choice</span><span class="o">`</span> <span class="p">(</span>
</span><span class='line'>  <span class="o">`</span><span class="n">id</span><span class="o">`</span> <span class="nb">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="n">AUTO_INCREMENT</span><span class="p">,</span>
</span><span class='line'>  <span class="o">`</span><span class="n">poll_id</span><span class="o">`</span> <span class="nb">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="o">`</span><span class="n">choice_text</span><span class="o">`</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="o">`</span><span class="n">votes</span><span class="o">`</span> <span class="nb">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">(</span><span class="o">`</span><span class="n">id</span><span class="o">`</span><span class="p">)</span>
</span><span class='line'><span class="p">)</span> <span class="n">ENGINE</span><span class="o">=</span><span class="n">InnoDB</span> <span class="k">DEFAULT</span> <span class="n">CHARSET</span><span class="o">=</span><span class="n">utf8</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">INSERT</span> <span class="k">INTO</span> <span class="o">`</span><span class="n">polls_choice</span><span class="o">`</span> <span class="p">(</span><span class="o">`</span><span class="n">id</span><span class="o">`</span><span class="p">,</span> <span class="o">`</span><span class="n">poll_id</span><span class="o">`</span><span class="p">,</span> <span class="o">`</span><span class="n">choice_text</span><span class="o">`</span><span class="p">,</span> <span class="o">`</span><span class="n">votes</span><span class="o">`</span><span class="p">)</span> <span class="k">VALUES</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span>   <span class="s1">&#39;Not much&#39;</span><span class="p">,</span>  <span class="mi">0</span><span class="p">),</span>
</span><span class='line'><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span>   <span class="s1">&#39;The sky&#39;</span><span class="p">,</span>   <span class="mi">0</span><span class="p">),</span>
</span><span class='line'><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span>   <span class="s1">&#39;Hello World&#39;</span><span class="p">,</span>   <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">-- 2013-09-28 11:22:17</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run the below PHP code and see the result.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">require</span> <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/vendor/autoload.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Sql\ExtendedPdo</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Sql\Profiler</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$pdo</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ExtendedPdo</span><span class="p">(</span>
</span><span class='line'>    <span class="s1">&#39;mysql:host=localhost;dbname=dbname&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;user&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;password&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="k">array</span><span class="p">(),</span> <span class="c1">// driver options as key-value pairs</span>
</span><span class='line'>    <span class="k">array</span><span class="p">()</span>  <span class="c1">// attributes as key-value pairs</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'><span class="nv">$pdo</span><span class="o">-&gt;</span><span class="na">setProfiler</span><span class="p">(</span><span class="k">new</span> <span class="nx">Profiler</span><span class="p">);</span>
</span><span class='line'><span class="nv">$pdo</span><span class="o">-&gt;</span><span class="na">getProfiler</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">setActive</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$stm</span> <span class="o">=</span> <span class="s1">&#39;SELECT * FROM polls_choice WHERE id IN (:id) AND poll_id = :poll_id&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$bind</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>    <span class="s1">&#39;id&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;1&#39;</span><span class="p">,</span> <span class="s1">&#39;2&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="s1">&#39;poll_id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;1&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'><span class="nv">$results</span> <span class="o">=</span> <span class="nv">$pdo</span><span class="o">-&gt;</span><span class="na">fetchAll</span><span class="p">(</span><span class="nv">$stm</span><span class="p">,</span> <span class="nv">$bind</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">foreach</span> <span class="p">(</span><span class="nv">$results</span> <span class="k">as</span> <span class="nv">$result</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">echo</span> <span class="s2">&quot;Query Result : &quot;</span> <span class="o">.</span> <span class="nv">$result</span><span class="p">[</span><span class="s1">&#39;choice_text&#39;</span><span class="p">]</span> <span class="o">.</span> <span class="nx">PHP_EOL</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;Profiler&quot;</span> <span class="o">.</span> <span class="nx">PHP_EOL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$profiles</span> <span class="o">=</span> <span class="nv">$pdo</span><span class="o">-&gt;</span><span class="na">getProfiler</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getProfiles</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">foreach</span> <span class="p">(</span><span class="nv">$profiles</span> <span class="k">as</span> <span class="nv">$profile</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">echo</span> <span class="s1">&#39; Function : &#39;</span> <span class="o">.</span> <span class="nv">$profile</span><span class="p">[</span><span class="s1">&#39;function&#39;</span><span class="p">]</span> <span class="o">.</span> <span class="nx">PHP_EOL</span><span class="p">;</span>
</span><span class='line'>  <span class="k">echo</span> <span class="s1">&#39; Duration : &#39;</span> <span class="o">.</span> <span class="nv">$profile</span><span class="p">[</span><span class="s1">&#39;duration&#39;</span><span class="p">]</span> <span class="o">.</span> <span class="nx">PHP_EOL</span><span class="p">;</span>
</span><span class='line'>  <span class="k">echo</span> <span class="s1">&#39; Statement : &#39;</span> <span class="o">.</span> <span class="nv">$profile</span><span class="p">[</span><span class="s1">&#39;statement&#39;</span><span class="p">]</span> <span class="o">.</span> <span class="nx">PHP_EOL</span><span class="p">;</span>
</span><span class='line'>  <span class="k">echo</span> <span class="s1">&#39; Bind Values : &#39;</span> <span class="o">.</span> <span class="nb">print_r</span><span class="p">(</span><span class="nv">$profile</span><span class="p">[</span><span class="s1">&#39;bind_values&#39;</span><span class="p">],</span> <span class="k">true</span><span class="p">)</span> <span class="o">.</span> <span class="nx">PHP_EOL</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>It comes with lazy connection, profiler, connection locator etc. Read more from
<a href="https://github.com/auraphp/Aura.Sql/tree/develop-2#getting-started">getting started docs</a></p>

<h2><a href="https://github.com/auraphp/Aura.Sql_Schema">Aura.Sql_Schema</a></h2>

<p>An independent schema discovery tool for MySQL, PostgreSQL,
SQLite, and Microsoft SQL Server. You can
<a href="https://github.com/auraphp/Aura.Sql_Schema#getting-started">read more from the docs</a></p>

<h2><a href="https://github.com/auraphp/Aura.Sql_Query">Aura.Sql_Query</a></h2>

<p>Independent query builders for MySQL, PostgreSQL, SQLite, and Microsoft SQL Server</p>

<p>Good thing is all are standalone.</p>

<p>Version 2 also comes with a new
<a href="https://github.com/auraphp/Aura.Dispatcher">Dispatcher</a>
and <a href="https://github.com/auraphp/Aura.Includer">Includer</a>.</p>

<p>You can read the story behind Dispatcher from
<a href="https://groups.google.com/d/msg/auraphp/hyjEPEeo6_w/u616Pu3kQrcJ">here</a>
and Includer from
<a href="https://groups.google.com/d/msg/auraphp/WOo6TSceqHU/ZdgIkUgU0VIJ">here</a></p>

<p>vi <a href="https://github.com/auraphp/Aura.Includer">Includer</a>
aura solved one of the problem of reading configuration files.</p>

<p>Let us look into the example of the Aura.Includer and how it works.</p>

<p>The <code>composer.json</code> looks like the one below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;minimum-stability&quot;</span><span class="p">:</span> <span class="s2">&quot;dev&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;require&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;aura/cli&quot;</span><span class="p">:</span> <span class="s2">&quot;dev-develop-2&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;aura/web&quot;</span><span class="p">:</span> <span class="s2">&quot;dev-develop-2&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;aura/autoload&quot;</span><span class="p">:</span> <span class="s2">&quot;dev-develop-2&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;aura/dispatcher&quot;</span><span class="p">:</span> <span class="s2">&quot;dev-develop-2&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;aura/html&quot;</span><span class="p">:</span> <span class="s2">&quot;dev-master&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;aura/input&quot;</span><span class="p">:</span> <span class="s2">&quot;dev-master&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;aura/view&quot;</span><span class="p">:</span> <span class="s2">&quot;2.*&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;aura/includer&quot;</span><span class="p">:</span> <span class="s2">&quot;dev-develop-2&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;aura/router&quot;</span><span class="p">:</span> <span class="s2">&quot;dev-develop&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;aura/di&quot;</span><span class="p">:</span> <span class="s2">&quot;1.*&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We can use the includer to read the configuration files and store it and
later use the cached file. The <code>includer.php</code> looks like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="nv">$loader</span> <span class="o">=</span> <span class="k">require</span> <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/vendor/autoload.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$includer</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">\Aura\Includer\Includer</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$includer</span><span class="o">-&gt;</span><span class="na">setDirs</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
</span><span class='line'>    <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/vendor/aura/router&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/vendor/aura/dispatcher&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/vendor/aura/web&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/vendor/aura/view&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/vendor/aura/html&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/vendor/aura/cli&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/vendor/aura/input&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$includer</span><span class="o">-&gt;</span><span class="na">setFiles</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
</span><span class='line'>    <span class="s1">&#39;config/default.php&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Router\Map</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Router\DefinitionFactory</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Router\RouteFactory</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$router</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Map</span><span class="p">(</span><span class="k">new</span> <span class="nx">DefinitionFactory</span><span class="p">,</span> <span class="k">new</span> <span class="nx">RouteFactory</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Di\Container</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Di\Forge</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Di\Config</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$di</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Container</span><span class="p">(</span><span class="k">new</span> <span class="nx">Forge</span><span class="p">(</span><span class="k">new</span> <span class="nx">Config</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$includer</span><span class="o">-&gt;</span><span class="na">setVars</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
</span><span class='line'>    <span class="s1">&#39;loader&#39;</span> <span class="o">=&gt;</span> <span class="nv">$loader</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;router&#39;</span> <span class="o">=&gt;</span> <span class="nv">$router</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;di&#39;</span> <span class="o">=&gt;</span> <span class="nv">$di</span><span class="p">,</span>
</span><span class='line'><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span> <span class="nb">file_exists</span><span class="p">(</span><span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/cache/includer.php&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$includer</span><span class="o">-&gt;</span><span class="na">load</span><span class="p">();</span>
</span><span class='line'>    <span class="nv">$text</span> <span class="o">=</span> <span class="nv">$includer</span><span class="o">-&gt;</span><span class="na">read</span><span class="p">();</span>
</span><span class='line'>    <span class="nb">file_put_contents</span><span class="p">(</span><span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/cache/includer.php&#39;</span><span class="p">,</span> <span class="s1">&#39;&lt;?php&#39;</span> <span class="o">.</span> <span class="nx">PHP_EOL</span> <span class="o">.</span> <span class="nv">$text</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$includer</span><span class="o">-&gt;</span><span class="na">setCacheFile</span><span class="p">(</span><span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/cache/includer.php&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$includer</span><span class="o">-&gt;</span><span class="na">load</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nv">$stdio</span> <span class="o">=</span> <span class="nv">$di</span><span class="o">-&gt;</span><span class="na">newInstance</span><span class="p">(</span><span class="s1">&#39;Aura\Cli\Stdio&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$stdio</span><span class="o">-&gt;</span><span class="na">outln</span><span class="p">(</span><span class="s1">&#39;This is normal text.&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Install the dependencies via <code>composer</code> and run via cli <code>php includer.php</code>.</p>

<p>The Aura.Includer is a nice addition for version 2
( I am also seeing it can be used in version 1 )
which will help a lot in the making of the framework with the libraries.</p>

<p>If you are interested to use, learn, or have a feedback a warm welcome to
<a href="https://groups.google.com/forum/#!forum/auraphp">join the google group for aura project for PHP</a></p>

<p>Have a nice day ahead. Enjoy PHPing.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Aura Framework Released]]></title>
    <link href="http://harikt.com/blog/2013/09/19/aura-framework-released/"/>
    <updated>2013-09-19T19:58:00+05:30</updated>
    <id>http://harikt.com/blog/2013/09/19/aura-framework-released</id>
    <content type="html"><![CDATA[<p>It is a great feeling, and one of the happiest moment in my life when
<a href="http://auraphp.com/blog/2013/09/18/aura-framework-stable-system-release/">aura releases its stable framework</a>.</p>

<p>Aura is one of my first framework, which helped me to learn the inner
working of a framework, how to create a framework, rather than playing
with full stack framework.</p>

<p>If you are interested to learn or contribute in the next version of Aura
<a href="http://groups.google.com/group/auraphp">join the group</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Book on Aura moved to Manual]]></title>
    <link href="http://harikt.com/blog/2013/09/07/book-on-aura-moved-to-manual/"/>
    <updated>2013-09-07T12:08:00+05:30</updated>
    <id>http://harikt.com/blog/2013/09/07/book-on-aura-moved-to-manual</id>
    <content type="html"><![CDATA[<p>Some days back I wrote about a WIP of
<a href="http://harikt.com/blog/2013/07/09/the-book-on-aura/">The Book on Aura</a></p>

<p>It got some attention and pull requests.</p>

<p><a href="https://github.com/koriym/the-book-on-aura-ja">Akihito Koriyama</a>
have already started to convert the documentation to Japanese.</p>

<p>And today I am happy to announce that it is officially going to the
manuals.</p>

<h2>Contributing</h2>

<p>Fork
<a href="https://github.com/auraphp/auraphp.github.com">https://github.com/auraphp/auraphp.github.com</a>
and contribute to the manuals.</p>

<p>The manuals are in different languages. Currently<br/>
<a href="https://github.com/koriym/the-book-on-aura-ja">Akihito Koriyama</a>
is working on Japanese translation.</p>

<p>We are aware some parts of the manual needs a rewrite / more explanation.
If you are interested to learn and contribute get in touch via
<a href="http://groups.google.com/group/auraphp">http://groups.google.com/group/auraphp</a>.</p>

<p>If you are looking for library documentation check
<a href="http://auraphp.com/packages/">packages documentation</a>.
The manuals is to show you how to use Aura Framework, which is built
on top of the <a href="http://auraphp.com/packages/">aura libraries</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Announcing winners of the contest]]></title>
    <link href="http://harikt.com/blog/2013/09/05/announcing-winners-of-the-contest/"/>
    <updated>2013-09-05T20:25:00+05:30</updated>
    <id>http://harikt.com/blog/2013/09/05/announcing-winners-of-the-contest</id>
    <content type="html"><![CDATA[<p>A few days back I ran a contest to Win Free Copies of Packt’s New Book on
<a href="http://harikt.com/blog/2013/08/23/chance-to-win-free-copies-of-packts-new-book-on-zend-framework-2-dot-0/">Zend Framework 2.0 by Example</a>.</p>

<p>So the lucky 3 are</p>

<ul>
<li>Nick Stanton</li>
<li>Kristopher Wilson</li>
<li>Dave Hall</li>
</ul>


<p>You may be having a question how I choose the winners.</p>

<p>What I did is created the list of people in an excel sheet and ran
the script.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="nv">$i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="nv">$i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">echo</span> <span class="nx">rand</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">18</span><span class="p">)</span> <span class="o">.</span> <span class="nx">PHP_EOL</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>There were 19 people who participated in the contest.
Dibin joseph was late and commented on Saturday August 31,
as the contest ended on 30th August 2013.</p>

<p>You can guess, why I opted to run such a script. Many of them are
known to me, and I don&rsquo;t want to do any partiality.</p>

<p>Congrats to the winners and I hope you will find the book interesting.</p>

<p>Thanks to all for actively participating, tweeting and promoting the
contest.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chance to Win Free Copies of Packt’s new book on Zend Framework 2.0]]></title>
    <link href="http://harikt.com/blog/2013/08/23/chance-to-win-free-copies-of-packts-new-book-on-zend-framework-2-dot-0/"/>
    <updated>2013-08-23T11:59:00+05:30</updated>
    <id>http://harikt.com/blog/2013/08/23/chance-to-win-free-copies-of-packts-new-book-on-zend-framework-2-dot-0</id>
    <content type="html"><![CDATA[<p>I have teamed up with <a href="http://www.packtpub.com">Packt Publishing</a> to organize a contest
of its newly published book on
<a href="http://www.packtpub.com/zend-framework-2-0-by-example-beginners-guide/book">Zend Framework 2.0 by example</a></p>

<p>And 3 lucky winners stand a chance to win eBook copies of the book.
Keep reading to find out how you can be one of the Lucky Winners.</p>

<h2>Overview of the book</h2>

<ul>
<li><p> Master application development with Zend Framework 2.0</p></li>
<li><p> Learn about Zend Framework components and use them for functions such as searching, image
processing, and payment gateway integrations</p></li>
<li><p> Integrate third-party services for media sharing and payment processing</p></li>
</ul>


<h2>How to Enter ?</h2>

<p>All you need to do is head on over to the
<a href="http://www.packtpub.com/zend-framework-2-0-by-example-beginners-guide/book">book page</a>
and look through the product description of the book and drop a line via the
comments below this post to let us know what interests you the most about this book.
It’s that simple.</p>

<p>Deadline:The contest will close in 1 weeks time (ie 30th August 2013).
Winners will be contacted by email, so be sure to use your real email
address when you comment! Hurry up as you could be one of the few lucky
ones to get yourself a free ebook of the latest released title.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Connecting to Magento via SOAP]]></title>
    <link href="http://harikt.com/blog/2013/07/12/connecting-to-magento-via-soap/"/>
    <updated>2013-07-12T14:12:00+05:30</updated>
    <id>http://harikt.com/blog/2013/07/12/connecting-to-magento-via-soap</id>
    <content type="html"><![CDATA[<p>In my earlier post I have shown how you can connect to Magento
with REST api. In this post let us connect via SOAP.</p>

<p>The below class acts like a proxy to call the magento soap api.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * </span>
</span><span class='line'><span class="sd"> * @author Hari K T</span>
</span><span class='line'><span class="sd"> * </span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">class</span> <span class="nc">My_Soap_Magento</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * Host name to connect</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * @var string</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">protected</span> <span class="nv">$hostname</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * User name</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * @var string</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">protected</span> <span class="nv">$username</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * API Key</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * @var string</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">protected</span> <span class="nv">$apikey</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * Zend_Soap_Client</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * @var Zend_Soap_Client</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">protected</span> <span class="nv">$client</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="k">protected</span> <span class="nv">$session</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * Constructor</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * @param string $hostname The host name</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * @param string $username The user name of the host</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * @param string $apikey The apikey of the host</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">__construct</span><span class="p">(</span><span class="nv">$hostname</span><span class="p">,</span> <span class="nv">$username</span><span class="p">,</span> <span class="nv">$apikey</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">hostname</span> <span class="o">=</span> <span class="nv">$hostname</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">username</span> <span class="o">=</span> <span class="nv">$username</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">apikey</span>   <span class="o">=</span> <span class="nv">$apikey</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * Magic method, the methods are named on the basis of Magento SOAP api</span>
</span><span class='line'><span class="sd">     * You don&#39;t need to pass the session as the first argument, for convience.</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * @link http://www.magentocommerce.com/api/soap/introduction.html</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * @param string $function</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * @param mixed $args</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * @return string | null</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">__call</span><span class="p">(</span><span class="nv">$function</span><span class="p">,</span> <span class="nv">$args</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$session</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getSession</span><span class="p">();</span>
</span><span class='line'>        <span class="nv">$params</span> <span class="o">=</span> <span class="nb">array_merge</span><span class="p">(</span><span class="k">array</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getSession</span><span class="p">()),</span> <span class="nv">$args</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$result</span> <span class="o">=</span> <span class="nb">call_user_func_array</span><span class="p">(</span><span class="k">array</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getClient</span><span class="p">(),</span> <span class="nv">$function</span><span class="p">),</span> <span class="nv">$params</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// I need to get as json</span>
</span><span class='line'>            <span class="k">return</span> <span class="nx">Zend_Json_Encoder</span><span class="o">::</span><span class="na">encode</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * Get the session from logging in to the Magento server</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * @return string</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">getSession</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">session</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="p">{</span>
</span><span class='line'>                <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">session</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getClient</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">login</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">username</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">apikey</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">Exception</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">session</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * If we already have a session, we can set the session so it don&#39;t </span>
</span><span class='line'><span class="sd">     * need to login again and get the session. This helps to reduce the </span>
</span><span class='line'><span class="sd">     * call for login . </span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * @see getSession()</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * @param string $session</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * @return IM_Soap_Magento</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">setSession</span><span class="p">(</span><span class="nv">$session</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">session</span> <span class="o">=</span> <span class="nv">$session</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$this</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * Get the Zend_Soap_Client object</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     * @return Zend_Soap_Client</span>
</span><span class='line'><span class="sd">     * </span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">getClient</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">client</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nv">$endpoint</span>  <span class="o">=</span> <span class="nx">trim</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">hostname</span><span class="p">,</span> <span class="s1">&#39;/&#39;</span><span class="p">)</span> <span class="o">.</span> <span class="s1">&#39;/api/v2_soap/?wsdl&#39;</span><span class="p">;</span>
</span><span class='line'>            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Zend_Soap_Client</span><span class="p">(</span>
</span><span class='line'>                <span class="nv">$endpoint</span>
</span><span class='line'>            <span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">client</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>In order to connect you want to create an object of the above
class <code>My_Soap_Magento</code>. You need to get the username and api key
from the magento host.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$object</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">My_Soap_Magento</span><span class="p">(</span>
</span><span class='line'>    <span class="s1">&#39;the-magento-host&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;username&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;apikey&#39;</span>
</span><span class='line'><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now you are done! You can connect to the soap api version 2 of
Magento server.</p>

<p>Sample how to get the product information, category tree,
category information, products list etc are shown below.</p>

<p>See we are not passing the session parameter.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">echo</span> <span class="s2">&quot;Product Info&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$result</span> <span class="o">=</span> <span class="nv">$proxy</span><span class="o">-&gt;</span><span class="na">catalogProductInfo</span><span class="p">(</span><span class="mi">16</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="nv">$result</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;Category Tree&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$result</span> <span class="o">=</span> <span class="nv">$proxy</span><span class="o">-&gt;</span><span class="na">catalogCategoryTree</span><span class="p">();</span>
</span><span class='line'><span class="k">echo</span> <span class="nv">$result</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;Category Info&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$result</span> <span class="o">=</span> <span class="nv">$proxy</span><span class="o">-&gt;</span><span class="na">catalogCategoryInfo</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="nv">$result</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">echo</span> <span class="s1">&#39;Products List&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$result</span> <span class="o">=</span> <span class="nv">$proxy</span><span class="o">-&gt;</span><span class="na">catalogProductList</span><span class="p">();</span>
</span><span class='line'><span class="k">echo</span> <span class="nv">$result</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A word about Tracy]]></title>
    <link href="http://harikt.com/blog/2013/07/12/a-word-about-tracy/"/>
    <updated>2013-07-12T13:31:00+05:30</updated>
    <id>http://harikt.com/blog/2013/07/12/a-word-about-tracy</id>
    <content type="html"><![CDATA[<p>Tracy is a wonderful component from the
<a href="http://nette.org">nette framework project</a>.</p>

<p>I have been looking at tracy for a while. It has nice awesome panel for
you to dump and debug things.</p>

<p>Looking exceptions are handy.</p>

<p><img src="http://harikt.com/images/tracy.png" alt="Tracy Panel" /></p>

<h2>Installation</h2>

<p>It is easy to install with composer. So your composer.json will be
something like below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;minimum-stability&quot;</span><span class="o">:</span> <span class="s2">&quot;dev&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;require&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;tracy/tracy&quot;</span><span class="o">:</span> <span class="s2">&quot;dev-master&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>and finally run the <code>composer.phar update</code></p>

<h2>Enabling the Debugger</h2>

<p>In-order to enable the debugger, you need to add two lines.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">use</span> <span class="nx">Tracy\Debugger</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Debugger</span><span class="o">::</span><span class="na">enable</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Assuming you have already added a line <code>require_once 'path/to/vendor/autoload.php';</code></p></blockquote>

<h2>Dump Data</h2>

<p>There are a variety of options which you can dump data. Some of
them are to firebug, firelogger etc.</p>

<p>In this  I am interested to show you how to dump data to the
debug bar.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">Debugger</span><span class="o">::</span><span class="na">barDump</span><span class="p">(</span><span class="s1">&#39;Some SQL Query&#39;</span><span class="p">,</span> <span class="s1">&#39;SQL&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">Debugger</span><span class="o">::</span><span class="na">barDump</span><span class="p">(</span><span class="k">array</span><span class="p">(</span><span class="s1">&#39;foo&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;bar&#39;</span><span class="p">),</span> <span class="s1">&#39;bar&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>The panel is smart enough to understand and float
where it stayed when you last opened it.</p>

<p>Try it out guys!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The book on aura]]></title>
    <link href="http://harikt.com/blog/2013/07/09/the-book-on-aura/"/>
    <updated>2013-07-09T06:55:00+05:30</updated>
    <id>http://harikt.com/blog/2013/07/09/the-book-on-aura</id>
    <content type="html"><![CDATA[<p>There has been lot of requests to show how the individual packages
in aura, can be made use inside the framework.</p>

<p>So today I am happy to announce that there is a work in progress
to make the framework documentation better. I have already started
the work on the same.</p>

<p>You can <a href="http://auraphp.com/manuals/">read the chapters online</a>.</p>

<p>The examples used in the book are also online at<br/>
<a href="https://github.com/harikt/Example.Package">https://github.com/harikt/Example.Package</a></p>

<blockquote><p>I hope Something is better than nothing.</p></blockquote>

<h2>Question / Doubts</h2>

<p>Ask your question / doubts in
<a href="https://groups.google.com/forum/#!forum/auraphp">google groups</a></p>

<h2>Feedback</h2>

<p>I will be more happy to hear your feedback, critics, comments etc.
So do shout at me.</p>

<h2>Contributing</h2>

<p>If you interested in contributing to make it better, it is available
at <a href="https://github.com/auraphp/auraphp.github.com">https://github.com/auraphp/auraphp.github.com</a></p>

<p>Written in markdown. Still have hard time understanding things, create
an issue mentioning the problems you are facing.</p>

<h2>Thanks</h2>

<p>I would like to thank Paul M Jones for the awesome work he has done
on aura.</p>

<p>A special Thanks to <a href="https://github.com/jsurgeson">Jeff Surgeson</a> for
continously asking for the book.</p>

<p>Last but not the least, all who have motivated me to write a book.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Magento and REST api]]></title>
    <link href="http://harikt.com/blog/2013/07/05/magento-and-rest-api/"/>
    <updated>2013-07-05T08:31:00+05:30</updated>
    <id>http://harikt.com/blog/2013/07/05/magento-and-rest-api</id>
    <content type="html"><![CDATA[<p>Magento provides both REST and SOAP api. In this post I would like to
concentrate on REST api to connect and get the products from magento shop.</p>

<p>First we want to register an Oauth consumer to get the consumer key and secret key.</p>

<p>Login to the admin of the magento shop and from the menu
<code>System-&gt;Web Services-&gt;REST - Oauth Consumers</code> and add a new Ouath consumer.</p>

<p><img src="http://harikt.com/images/oauth-consumer.png" alt="REST - Oauth Consumers" /></p>

<p>You need the Key and Secret which is what we pass in the config to
<code>Zend_Oauth_Consumer</code> shortly.</p>

<p>Let us also assign the right permissions for the attributes. From the menu
<code>System-&gt;Web Services-&gt;REST - Attributes</code> click on Admin and assign the right
permission. In our case we give access to products.</p>

<p><img src="http://harikt.com/images/magento_rest_attributes.png" alt="REST - Attributes" /></p>

<p>Now it is time to show you some code. In most case, we would have defined a
named route, and depeding upon your route in zend framework call the url.</p>

<p>Assuming the default url <code>http://localhost:8000/index/index</code> and accessing
this in your browser will redirect you to the magento shop and get the access token after
you authenticating and allowing it.</p>

<p>Note : Make sure that the domain you have logged in and the one
you have provided in the callback url of magento REST Oauth consumer are
same. Else you will find hard time debugging why session is lost.
(I am talking about the difference in <a href="http://www.example.com">http://www.example.com</a> and <a href="http://example.com">http://example.com</a>)</p>

<p>You want to change the below parameters in the controller according to yours.</p>

<p><code>$this-&gt;hostname</code>: The magento shop</p>

<p><code>$consumerKey</code>: The key you got when creating the oauth consumer</p>

<p><code>$consumerSecret</code>: The secret key you got when creating the oauth consumer</p>

<p><code>$callbackUrl</code>: The url where it will be redirected to get the accesstoken,
same as the one you have provided when creating the oauth consumer.</p>

<h2>Source Code</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">class</span> <span class="nc">IndexController</span> <span class="k">extends</span> <span class="nx">Zend_Controller_Action</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">init</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">hostname</span> <span class="o">=</span> <span class="s1">&#39;the-magento-host&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$consumerKey</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$consumerSecret</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$callbackUrl</span> <span class="o">=</span> <span class="s1">&#39;callback-url&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">config</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="s1">&#39;callbackUrl&#39;</span> <span class="o">=&gt;</span> <span class="nv">$callbackUrl</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;requestTokenUrl&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">hostname</span> <span class="o">.</span> <span class="s1">&#39;/oauth/initiate&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;siteUrl&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">hostname</span> <span class="o">.</span> <span class="s1">&#39;/oauth&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;consumerKey&#39;</span> <span class="o">=&gt;</span> <span class="nv">$consumerKey</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;consumerSecret&#39;</span> <span class="o">=&gt;</span> <span class="nv">$consumerSecret</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;authorizeUrl&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">hostname</span> <span class="o">.</span> <span class="s1">&#39;/admin/oauth_authorize&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="c1">// &#39;authorizeUrl&#39; =&gt; $this-&gt;hostname . &#39;/oauth/authorize&#39;,</span>
</span><span class='line'>            <span class="s1">&#39;accessTokenUrl&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">hostname</span> <span class="o">.</span> <span class="s1">&#39;/oauth/token&#39;</span>
</span><span class='line'>        <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">indexAction</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$accesssession</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Zend_Session_Namespace</span><span class="p">(</span><span class="s1">&#39;AccessToken&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$accesssession</span><span class="o">-&gt;</span><span class="na">accessToken</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="nv">$token</span> <span class="o">=</span> <span class="nb">unserialize</span><span class="p">(</span><span class="nv">$accesssession</span><span class="o">-&gt;</span><span class="na">accessToken</span><span class="p">);</span>
</span><span class='line'>            <span class="c1">// $client = $token-&gt;getHttpClient($this-&gt;config);</span>
</span><span class='line'>            <span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Zend_Http_Client</span><span class="p">();</span>
</span><span class='line'>            <span class="nv">$adapter</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Zend_Http_Client_Adapter_Curl</span><span class="p">();</span>
</span><span class='line'>            <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">setAdapter</span><span class="p">(</span><span class="nv">$adapter</span><span class="p">);</span>
</span><span class='line'>            <span class="nv">$adapter</span><span class="o">-&gt;</span><span class="na">setConfig</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
</span><span class='line'>                <span class="s1">&#39;adapter&#39;</span>   <span class="o">=&gt;</span> <span class="s1">&#39;Zend_Http_Client_Adapter_Curl&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;curloptions&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="nx">CURLOPT_FOLLOWLOCATION</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">),</span>
</span><span class='line'>            <span class="p">));</span>
</span><span class='line'>            <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">setUri</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">hostname</span> <span class="o">.</span> <span class="s1">&#39;/api/rest/products&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">setParameterGet</span><span class="p">(</span><span class="s1">&#39;oauth_token&#39;</span><span class="p">,</span> <span class="nv">$token</span><span class="o">-&gt;</span><span class="na">getToken</span><span class="p">());</span>
</span><span class='line'>            <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">setParameterGet</span><span class="p">(</span><span class="s1">&#39;oauth_token_secret&#39;</span><span class="p">,</span> <span class="nv">$token</span><span class="o">-&gt;</span><span class="na">getTokenSecret</span><span class="p">());</span>
</span><span class='line'>            <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">request</span><span class="p">(</span><span class="s1">&#39;GET&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="nv">$products</span> <span class="o">=</span> <span class="nx">Zend_Json</span><span class="o">::</span><span class="na">decode</span><span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">());</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="nv">$consumer</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Zend_Oauth_Consumer</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">config</span><span class="p">);</span>
</span><span class='line'>            <span class="nv">$token</span> <span class="o">=</span> <span class="nv">$consumer</span><span class="o">-&gt;</span><span class="na">getRequestToken</span><span class="p">();</span>
</span><span class='line'>            <span class="nv">$requestsession</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Zend_Session_Namespace</span><span class="p">(</span><span class="s1">&#39;RequestToken&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="nv">$requestsession</span><span class="o">-&gt;</span><span class="na">requestToken</span> <span class="o">=</span> <span class="nb">serialize</span><span class="p">(</span><span class="nv">$token</span><span class="p">);</span>
</span><span class='line'>            <span class="nv">$consumer</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">view</span><span class="o">-&gt;</span><span class="na">products</span> <span class="o">=</span> <span class="nv">$products</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">callbackAction</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$requestsession</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Zend_Session_Namespace</span><span class="p">(</span><span class="s1">&#39;RequestToken&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="k">empty</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nb">isset</span><span class="p">(</span><span class="nv">$requestsession</span><span class="o">-&gt;</span><span class="na">requestToken</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="nv">$accesssession</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Zend_Session_Namespace</span><span class="p">(</span><span class="s1">&#39;AccessToken&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="nv">$consumer</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Zend_Oauth_Consumer</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">config</span><span class="p">);</span>
</span><span class='line'>            <span class="nv">$token</span> <span class="o">=</span> <span class="nv">$consumer</span><span class="o">-&gt;</span><span class="na">getAccessToken</span><span class="p">(</span>
</span><span class='line'>                <span class="nv">$_GET</span><span class="p">,</span>
</span><span class='line'>                <span class="nb">unserialize</span><span class="p">(</span><span class="nv">$requestsession</span><span class="o">-&gt;</span><span class="na">requestToken</span><span class="p">)</span>
</span><span class='line'>            <span class="p">);</span>
</span><span class='line'>            <span class="nv">$accesssession</span><span class="o">-&gt;</span><span class="na">accessToken</span> <span class="o">=</span> <span class="nb">serialize</span><span class="p">(</span><span class="nv">$token</span><span class="p">);</span>
</span><span class='line'>            <span class="c1">// Now that we have an Access Token, we can discard the Request Token</span>
</span><span class='line'>            <span class="nb">unset</span><span class="p">(</span><span class="nv">$requestsession</span><span class="o">-&gt;</span><span class="na">requestToken</span><span class="p">);</span>
</span><span class='line'>            <span class="c1">// $this-&gt;_redirect();</span>
</span><span class='line'>            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_forward</span><span class="p">(</span><span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="s1">&#39;default&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// Mistaken request? Some malfeasant trying something?</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nx">Exception</span><span class="p">(</span><span class="s1">&#39;Invalid callback request. Oops. Sorry.&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">callbackrejectedAction</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// rejected</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Normally you can get the http client by <code>$token-&gt;getHttpClient($this-&gt;config)</code>
rather than creating <code>Zend_Http_Client</code> as I did. But due to some issues
the request was getting <code>Service Temporarily Unavailable</code> as response.</p>

<p>The <code>Service Temporarily Unavailable</code> can also be due to permission issues.
You should also check whether you have given the right permissions for
roles and resources.</p>

<p>In most case, we would have defined a named route, so you could use the
url helpers to generate the route. I hope this helps you to move with REST
and Magento</p>

<h2>Resources</h2>

<p><a href="http://www.magentocommerce.com/api/rest/introduction.html">Magento REST API</a></p>

<p><a href="http://framework.zend.com/manual/1.12/en/zend.oauth.introduction.html">zend oauth introduction</a></p>

<h2>Thanks</h2>

<p>I would like to thank <a href="http://phpcloud.com">PHP Cloud</a> for providing the
free service to deploy the magento shop and test it. Installing and deploying app was super
simple. So if you have not tried it is time for it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A sample tutorial package]]></title>
    <link href="http://harikt.com/blog/2013/06/21/a-sample-tutorial-package/"/>
    <updated>2013-06-21T22:04:00+05:30</updated>
    <id>http://harikt.com/blog/2013/06/21/a-sample-tutorial-package</id>
    <content type="html"><![CDATA[<p>A sample application (still a WIP) to show a real world demo for the aura framework with Propel2.</p>

<p>Things can be done in an improved/advanced way and if you find something wrong create an issue or
consider giving a Pull Request.</p>

<p>The application is a blog tutorial. Hope this will help you to start with aura. Feel free to use your own orm
or Aura.Sql and build your own models.</p>

<h2>Installation</h2>

<h2>via zip</h2>

<p>Download the zip, unzip <code>Hari.Sample</code> and place it in the <code>package</code> folder.</p>

<h2>via git</h2>

<p>Move to package folder and clone the repo</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone https://github.com/harikt/Hari.Sample.git</span></code></pre></td></tr></table></div></figure>


<h2>via composer</h2>

<p>If you have not yet played with <code>aura</code> framework. Download the composer.phar file. I assume the <code>composer.phar</code> is
globally available in the name composer. Else use the path to the <code>composer.phar</code> according to yours.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>composer create-project --stability=dev aura/system sampleproject</span></code></pre></td></tr></table></div></figure>


<p>This will create a folder named <code>sampleproject</code> cloning the <a href="https://github.com/auraphp/system">https://github.com/auraphp/system</a> repo and downloading
the rest of the packages.</p>

<p>Move to the folder by</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd sampleproject</span></code></pre></td></tr></table></div></figure>


<p>Now let us install the <code>hari/sample</code> via composer.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"hari/sample": "dev-master"</span></code></pre></td></tr></table></div></figure>


<p>So your <code>composer.json</code> will look like</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>    "minimum-stability": "dev",
</span><span class='line'>    "require": {
</span><span class='line'>        "aura/installer-system" : "1.0.0",
</span><span class='line'>        "aura/framework"        : "dev-develop",
</span><span class='line'>        "aura/demo"             : "dev-develop",
</span><span class='line'>        "hari/sample"           : "dev-master"
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Let us run composer update and install the <code>hari/sample</code> package and its dependencies.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>composer update</span></code></pre></td></tr></table></div></figure>


<p>This will install <code>hari/sample</code> and also the dependency <code>propelorm</code> version 2.</p>

<h2>Building configuration</h2>

<p>Edit the <code>runtime-conf.xml</code> file located at <code>config</code> folder. Change the <code>database</code>, <code>username</code> and <code>password</code>
according to yours.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vendor/bin/propel config:convert-xml --output-dir=package/Hari.Sample/config --input-dir=package/Hari.Sample/config</span></code></pre></td></tr></table></div></figure>


<h2>Building sql</h2>

<p>Edit the <code>runtime-conf.xml</code> file located at <code>config</code> folder. Change the <code>database</code>, <code>username</code> and <code>password</code>
according to yours.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vendor/bin/propel sql:build --input-dir=package/Hari.Sample --output-dir=package/Hari.Sample/data</span></code></pre></td></tr></table></div></figure>


<h2>Propel model generation</h2>

<p>The model is generated by propel from the schema located at <code>package/Hari.Sample/schema.xml</code>.
The package already have the generated classes. If you want to re-generate the model classes
after modifying the schema run the command.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vendor/bin/propel model:build --input-dir=package/Hari.Sample --output-dir=package/Hari.Sample/src</span></code></pre></td></tr></table></div></figure>


<h2>Enabling the Package</h2>

<p>If you have installed <code>hari/sample</code> via <code>composer</code> then you can skip this step.
Else you need to edit the <code>config/_packages</code> and add <code>Hari.Sample</code> to the end of file.</p>

<p>Any troubles create an issue or ask in auraphp at googlegroups.com</p>

<h2>What is in it?</h2>

<p>Blog tutorial.</p>

<p>Register a user</p>

<p><img src="https://github.com/harikt/Hari.Sample/raw/master/web/img/register.png" alt="Register a user" /></p>

<p>Login to add posts</p>

<p><img src="https://github.com/harikt/Hari.Sample/raw/master/web/img/login.png" alt="Login as the user" /></p>

<p><img src="https://github.com/harikt/Hari.Sample/raw/master/web/img/add-post.png" alt="Add post" /></p>

<p>List all Posts</p>

<p><img src="https://github.com/harikt/Hari.Sample/raw/master/web/img/posts.png" alt="List all posts" /></p>

<p>Post has threaded comments.</p>

<p><img src="https://github.com/harikt/Hari.Sample/raw/master/web/img/comments.png" alt="Threaded comments" /></p>

<h2>Known problems</h2>

<p><a href="https://groups.google.com/d/msg/propel-users/x6PH_DwLtVE/H84o1cu4W4kJ">The edit post doesn&rsquo;t work</a>.</p>

<p>Comments Thread, probably not the right way to do with Propel? <a href="https://groups.google.com/d/msg/propel-users/d8p-nw_4x4A/YYpkcP-EqUkJ">Question here</a></p>

<p>and much more.</p>

<h2>Credits and Thanks</h2>

<p><a href="https://github.com/simensen">Beau Simensen</a>
<a href="https://github.com/pmjones">Paul M Jones</a></p>

<p><a href="http://auraphp.com">Aura Packages</a>
<a href="http://getcomposer.org">Composer</a>
<a href="http://propelorm.org">Propel</a>
<a href="http://symfony.com">Symfony</a></p>

<p>to all the people who motivated me to bring this sample application.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Aura.Web, build your own controller class]]></title>
    <link href="http://harikt.com/blog/2013/06/04/aura-dot-web/"/>
    <updated>2013-06-04T07:47:00+05:30</updated>
    <id>http://harikt.com/blog/2013/06/04/aura-dot-web</id>
    <content type="html"><![CDATA[<p>If you are new to the concept of MVC, or if you are planning to build your
own framework, probably Aura.Web help you to do the same.</p>

<p>Here is the article in phpmaster.com <a href="http://phpmaster.com/aura-web-auras-page-controller-for-mvc/">Aura.Web: Aura’s Page Controller for MVC</a>.</p>

<p>Probably you may also like the article <a href="http://phpmaster.com/web-routing-in-php-with-aura-router/">Web Routing in PHP with Aura.Router</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Aura System released beta5]]></title>
    <link href="http://harikt.com/blog/2013/05/25/aura-system-released-beta5/"/>
    <updated>2013-05-25T21:44:00+05:30</updated>
    <id>http://harikt.com/blog/2013/05/25/aura-system-released-beta5</id>
    <content type="html"><![CDATA[<p>Yesterday Paul M Jones tagged the beta5 for the system repo.</p>

<p>So you can download the system from <a href="http://auraphp.com/system/downloads">http://auraphp.com/system/downloads/</a></p>

<h2>via composer</h2>

<p>Creating aura framework based projects has been made easy with composer. You can run</p>

<pre><code>php composer.phar create-project -s dev aura/system your-directory
</code></pre>

<p>What it does is almost similar to git clone and installing via git as below</p>

<p>via git</p>

<pre><code>git clone https://github.com/auraphp/system
cd system
php update.php
</code></pre>

<p>you can also skip php update.php with</p>

<pre><code>php composer.phar install
</code></pre>

<p>You can read some basic introduction from <a href="http://auraphp.com/system">http://auraphp.com/system/</a></p>

<p>NB : If you haven&rsquo;t heard about composer you can read it from <a href="http://getcomposer.org">getcomposer.org</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Standalone form for PHP]]></title>
    <link href="http://harikt.com/blog/2013/05/23/standalone-form-for-php/"/>
    <updated>2013-05-23T07:03:00+05:30</updated>
    <id>http://harikt.com/blog/2013/05/23/standalone-form-for-php</id>
    <content type="html"><![CDATA[<p>Yesterday I wrote about <a href="http://harikt.com/blog/2013/05/21/standalone-forms-and-validation/">Standalone Forms and Validation</a>. It may need
a little bit knowledge on how the <a href="http://auraphp.com/packages">Aura.Filter</a> works. But that is
a good start if you want to know how you can integrate the pieces of Aura.</p>

<p>Today I think I need to show you the very minimal approach you can take
to build the form and validate your form. If you want to
use a powerful validation and filtering use something like <a href="http://auraphp.com/packages">Aura.Filter</a>
or bind your favourite components which does the validation <a href="https://github.com/Respect/Validation">Respect</a>, <a href="https://github.com/symfony/validator">Symfony2 Validator</a>,
<a href="https://github.com/vlucas/valitron">valitron</a> and filtering with something like <a href="https://github.com/rdohms/DMS-Filter">DMS-Filter</a>.</p>

<p>You can see how you can integrate with different components as I did with
<a href="http://auraphp.com/packages">Aura.Filter</a> in the example in master branch.</p>

<p>I assume you know a bit about <a href="http://getcomposer.org">composer</a> and how to install.</p>

<p>The <code>composer.json</code> file</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;minimum-stability&quot;</span><span class="o">:</span> <span class="s2">&quot;dev&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;require&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;aura/input&quot;</span><span class="o">:</span> <span class="s2">&quot;1.0.0-beta1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;aura/view&quot;</span><span class="o">:</span> <span class="s2">&quot;1.1.2&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The page which you need to bring the form.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Input\Builder</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Input\Filter</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Input\Form</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$loader</span> <span class="o">=</span> <span class="k">require</span> <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/vendor/autoload.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">ContactForm</span> <span class="k">extends</span> <span class="nx">Form</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">init</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">setAttribs</span><span class="p">([</span>
</span><span class='line'>                <span class="s1">&#39;id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;name&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;maxlength&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>            <span class="p">]);</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">setAttribs</span><span class="p">([</span>
</span><span class='line'>                <span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;maxlength&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>            <span class="p">]);</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;url&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">setAttribs</span><span class="p">([</span>
</span><span class='line'>                <span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;maxlength&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>            <span class="p">]);</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;message&#39;</span><span class="p">,</span> <span class="s1">&#39;textarea&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">setAttribs</span><span class="p">([</span>
</span><span class='line'>                <span class="s1">&#39;cols&#39;</span> <span class="o">=&gt;</span> <span class="mi">40</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;rows&#39;</span> <span class="o">=&gt;</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>            <span class="p">]);</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;submit&#39;</span><span class="p">,</span> <span class="s1">&#39;submit&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">setAttribs</span><span class="p">([</span><span class="s1">&#39;value&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;send&#39;</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$filter</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getFilter</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">setRule</span><span class="p">(</span>
</span><span class='line'>            <span class="s1">&#39;name&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;Name must be alphabetic only.&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="k">function</span> <span class="p">(</span><span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="nb">ctype_alpha</span><span class="p">(</span><span class="nv">$value</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">setRule</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">,</span> <span class="s1">&#39;Enter a valid email address&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">filter_var</span><span class="p">(</span><span class="nv">$value</span><span class="p">,</span> <span class="nx">FILTER_VALIDATE_EMAIL</span><span class="p">);</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">setRule</span><span class="p">(</span><span class="s1">&#39;url&#39;</span><span class="p">,</span> <span class="s1">&#39;Enter a valid url&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">filter_var</span><span class="p">(</span><span class="nv">$value</span><span class="p">,</span> <span class="nx">FILTER_VALIDATE_URL</span><span class="p">);</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">setRule</span><span class="p">(</span><span class="s1">&#39;message&#39;</span><span class="p">,</span> <span class="s1">&#39;Message should be more than 7 characters&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nb">strlen</span><span class="p">(</span><span class="nv">$value</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">7</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$form</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ContactForm</span><span class="p">(</span><span class="k">new</span> <span class="nx">Builder</span><span class="p">(),</span> <span class="k">new</span> <span class="nx">Filter</span><span class="p">());</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nv">$_POST</span> <span class="o">&amp;&amp;</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">&#39;submit&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;send&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$data</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">$form</span><span class="o">-&gt;</span><span class="na">fill</span><span class="p">(</span><span class="nv">$data</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$form</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">//</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s2">&quot;Yes successfully validated and filtered&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="nb">var_dump</span><span class="p">(</span><span class="nv">$data</span><span class="p">);</span>
</span><span class='line'>        <span class="k">exit</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$helper</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Aura\View\HelperLocator</span><span class="p">([</span>
</span><span class='line'>    <span class="s1">&#39;field&#39;</span>         <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="nx">Aura\View\Helper\Form\Field</span><span class="p">(</span>
</span><span class='line'>            <span class="k">require</span> <span class="nb">dirname</span><span class="p">(</span><span class="nx">__DIR__</span><span class="p">)</span> <span class="o">.</span> <span class="s1">&#39;/vendor/aura/view/scripts/field_registry.php&#39;</span>
</span><span class='line'>        <span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s1">&#39;input&#39;</span>         <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="k">new</span> <span class="nx">Aura\View\Helper\Form\Input</span><span class="p">(</span>
</span><span class='line'>            <span class="k">require</span> <span class="nb">dirname</span><span class="p">(</span><span class="nx">__DIR__</span><span class="p">)</span> <span class="o">.</span> <span class="s1">&#39;/vendor/aura/view/scripts/input_registry.php&#39;</span>
</span><span class='line'>        <span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s1">&#39;radios&#39;</span>        <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="k">new</span> <span class="nx">Aura\View\Helper\Form\Radios</span><span class="p">(</span><span class="k">new</span> <span class="nx">Aura\View\Helper\Form\Input\Checked</span><span class="p">);</span> <span class="p">},</span>
</span><span class='line'>    <span class="s1">&#39;repeat&#39;</span>         <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="k">new</span> <span class="nx">Aura\View\Helper\Form\Repeat</span><span class="p">(</span>
</span><span class='line'>            <span class="k">require</span> <span class="nb">dirname</span><span class="p">(</span><span class="nx">__DIR__</span><span class="p">)</span> <span class="o">.</span> <span class="s1">&#39;/vendor/aura/view/scripts/repeat_registry.php&#39;</span>
</span><span class='line'>        <span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s1">&#39;select&#39;</span>        <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="k">new</span> <span class="nx">Aura\View\Helper\Form\Select</span><span class="p">;</span> <span class="p">},</span>
</span><span class='line'>    <span class="s1">&#39;textarea&#39;</span>      <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="k">new</span> <span class="nx">Aura\View\Helper\Form\Textarea</span><span class="p">;</span> <span class="p">},</span>
</span><span class='line'><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$field</span> <span class="o">=</span> <span class="nv">$helper</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;field&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">function</span> <span class="nf">showFieldErrors</span><span class="p">(</span><span class="nv">$form</span><span class="p">,</span> <span class="nv">$name</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$errors</span> <span class="o">=</span> <span class="nv">$form</span><span class="o">-&gt;</span><span class="na">getMessages</span><span class="p">(</span><span class="nv">$name</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$str</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$errors</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$str</span> <span class="o">.=</span> <span class="s1">&#39;&lt;ul&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">foreach</span> <span class="p">(</span><span class="nv">$errors</span> <span class="k">as</span> <span class="nv">$error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nv">$str</span> <span class="o">.=</span> <span class="s1">&#39;&lt;li&gt;&#39;</span> <span class="o">.</span> <span class="nv">$error</span> <span class="o">.</span> <span class="s1">&#39;&lt;/li&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="nv">$str</span> <span class="o">.=</span> <span class="s1">&#39;&lt;/ul&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$str</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;html&gt;</span>
</span><span class='line'><span class="x">&lt;head&gt;</span>
</span><span class='line'><span class="x">    &lt;title&gt;Aura Form, to make it standalone&lt;/title&gt;</span>
</span><span class='line'><span class="x">&lt;/head&gt;</span>
</span><span class='line'><span class="x">&lt;body&gt;</span>
</span><span class='line'><span class="x">    &lt;form method=&quot;post&quot; action=&quot;&quot; enctype=&quot;multipart/form-data&quot; &gt;</span>
</span><span class='line'><span class="x">        &lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;</span>
</span><span class='line'><span class="x">            &lt;tr&gt;</span>
</span><span class='line'><span class="x">                &lt;td&gt;Name : &lt;/td&gt;</span>
</span><span class='line'><span class="x">                &lt;td&gt;</span>
</span><span class='line'><span class="x">                </span><span class="cp">&lt;?php</span>
</span><span class='line'>                    <span class="k">echo</span> <span class="nv">$field</span><span class="p">(</span><span class="nv">$form</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">));</span>
</span><span class='line'>                    <span class="k">echo</span> <span class="nx">showFieldErrors</span><span class="p">(</span><span class="nv">$form</span><span class="p">,</span> <span class="s1">&#39;name&#39;</span><span class="p">);</span>
</span><span class='line'>                <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">                &lt;/td&gt;</span>
</span><span class='line'><span class="x">            &lt;/tr&gt;</span>
</span><span class='line'><span class="x">            &lt;tr&gt;</span>
</span><span class='line'><span class="x">                &lt;td&gt;Email : &lt;/td&gt;</span>
</span><span class='line'><span class="x">                &lt;td&gt;</span>
</span><span class='line'><span class="x">                </span><span class="cp">&lt;?php</span>
</span><span class='line'>                    <span class="k">echo</span> <span class="nv">$field</span><span class="p">(</span><span class="nv">$form</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">));</span>
</span><span class='line'>                    <span class="k">echo</span> <span class="nx">showFieldErrors</span><span class="p">(</span><span class="nv">$form</span><span class="p">,</span> <span class="s1">&#39;email&#39;</span><span class="p">);</span>
</span><span class='line'>                <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">                &lt;/td&gt;</span>
</span><span class='line'><span class="x">            &lt;/tr&gt;</span>
</span><span class='line'><span class="x">            &lt;tr&gt;</span>
</span><span class='line'><span class="x">                &lt;td&gt;Url : &lt;/td&gt;</span>
</span><span class='line'><span class="x">                &lt;td&gt;</span>
</span><span class='line'><span class="x">                </span><span class="cp">&lt;?php</span>
</span><span class='line'>                    <span class="k">echo</span> <span class="nv">$field</span><span class="p">(</span><span class="nv">$form</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;url&#39;</span><span class="p">));</span>
</span><span class='line'>                    <span class="k">echo</span> <span class="nx">showFieldErrors</span><span class="p">(</span><span class="nv">$form</span><span class="p">,</span> <span class="s1">&#39;url&#39;</span><span class="p">);</span>
</span><span class='line'>                <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">                &lt;/td&gt;</span>
</span><span class='line'><span class="x">            &lt;/tr&gt;</span>
</span><span class='line'><span class="x">            &lt;tr&gt;</span>
</span><span class='line'><span class="x">                &lt;td&gt;Message : &lt;/td&gt;</span>
</span><span class='line'><span class="x">                &lt;td&gt;</span>
</span><span class='line'><span class="x">                </span><span class="cp">&lt;?php</span>
</span><span class='line'>                    <span class="k">echo</span> <span class="nv">$field</span><span class="p">(</span><span class="nv">$form</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;message&#39;</span><span class="p">));</span>
</span><span class='line'>                    <span class="k">echo</span> <span class="nx">showFieldErrors</span><span class="p">(</span><span class="nv">$form</span><span class="p">,</span> <span class="s1">&#39;message&#39;</span><span class="p">);</span>
</span><span class='line'>                <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">                &lt;/td&gt;</span>
</span><span class='line'><span class="x">            &lt;/tr&gt;</span>
</span><span class='line'><span class="x">            &lt;tr&gt;</span>
</span><span class='line'><span class="x">                &lt;td colspan=&quot;2&quot;&gt;</span>
</span><span class='line'><span class="x">                </span><span class="cp">&lt;?php</span>
</span><span class='line'>                <span class="k">echo</span> <span class="nv">$field</span><span class="p">(</span><span class="nv">$form</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;submit&#39;</span><span class="p">));</span>
</span><span class='line'>                <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">                &lt;/td&gt;</span>
</span><span class='line'><span class="x">            &lt;/tr&gt;</span>
</span><span class='line'><span class="x">        &lt;/table&gt;</span>
</span><span class='line'><span class="x">    &lt;/form&gt;</span>
</span><span class='line'><span class="x">&lt;/body&gt;</span>
</span><span class='line'><span class="x">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it. Pretty clear I guess. Still having trouble?
The whole code lies in the <a href="https://github.com/harikt/phpform/tree/minimalview">minimalview</a> branch of the <a href="https://github.com/harikt/phpform">phpform</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Standalone Forms and Validation]]></title>
    <link href="http://harikt.com/blog/2013/05/21/standalone-forms-and-validation/"/>
    <updated>2013-05-21T20:15:00+05:30</updated>
    <id>http://harikt.com/blog/2013/05/21/standalone-forms-and-validation</id>
    <content type="html"><![CDATA[<p>Update : I wrote a very minimal approach <a href="http://harikt.com/blog/2013/05/23/standalone-form-for-php/">here</a></p>

<p>Recently <a href="http://auraphp.com/Aura.Input/">Aura.Input</a> was tagged Beta1. I would like to show you how you
can use <a href="http://auraphp.com/Aura.Input/">Aura.Input</a>, <a href="http://auraphp.com/Aura.Filter/">Aura.Filter</a> and <a href="http://auraphp.com/Aura.View/">Aura.View</a> to create form.</p>

<p>The <a href="http://auraphp.com/Aura.Input/">Aura.Input</a> itself contains a basic filter implementation. As shown
in earlier post <a href="http://harikt.com/blog/2013/02/22/aura-turns-2/">Aura Turns 2</a></p>

<p>But in this post let us use the power of <a href="http://auraphp.com/Aura.Filter/">Aura.Filter</a>. As <a href="http://auraphp.com/Aura.Input/">Aura.Input</a>
doesn&rsquo;t have a rendering capability you may need to use <a href="http://auraphp.com/Aura.View/">Aura.View</a> as
templating system ( see Using Aura.View ) or use the helper classes provided by <a href="http://auraphp.com/Aura.View/">Aura.View</a>
( see below Without using Aura.View completely )
or create your own helper classes to render the same from the hints
( see Hints for the view ).</p>

<p>The whole example is in <a href="https://github.com/harikt/phpform">https://github.com/harikt/phpform</a> repo.
If you don&rsquo;t have composer, you can download it from <a href="http://getcomposer.org">http://getcomposer.org</a>
and install the dependencies via composer.</p>

<h2>In a nut shell</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone https://github.com/harikt/phpform
</span><span class='line'>cd phpform
</span><span class='line'>php composer.phar install
</span><span class='line'>php -S localhost:8000 web/index.php</span></code></pre></td></tr></table></div></figure>


<p>Point your browser to the url <a href="http://localhost:8000">http://localhost:8000</a></p>

<h2>Let us look into some details</h2>

<p>Inorder to use <a href="http://auraphp.com/Aura.Filter/">Aura.Filter</a> with <a href="http://auraphp.com/Aura.Input/">Aura.Input</a> we need to implement the
<code>Aura\Input\FilterInterface</code>.</p>

<p>This is just extending the <code>Aura\Filter\RuleCollection</code> and implementing
the <code>Aura\Input\FilterInterface</code> as below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">namespace</span> <span class="nx">Domicile\Example</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Filter\RuleCollection</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Input\FilterInterface</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Filter</span> <span class="k">extends</span> <span class="nx">RuleCollection</span> <span class="k">implements</span> <span class="nx">FilterInterface</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let us create the form class.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">namespace</span> <span class="nx">Domicile\Example</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Input\Form</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">ContactForm</span> <span class="k">extends</span> <span class="nx">Form</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">init</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">setAttribs</span><span class="p">([</span>
</span><span class='line'>                <span class="s1">&#39;id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;name&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;maxlength&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>            <span class="p">]);</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">setAttribs</span><span class="p">([</span>
</span><span class='line'>                <span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;maxlength&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>            <span class="p">]);</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;url&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">setAttribs</span><span class="p">([</span>
</span><span class='line'>                <span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;maxlength&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>            <span class="p">]);</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;message&#39;</span><span class="p">,</span> <span class="s1">&#39;textarea&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">setAttribs</span><span class="p">([</span>
</span><span class='line'>                <span class="s1">&#39;cols&#39;</span> <span class="o">=&gt;</span> <span class="mi">40</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;rows&#39;</span> <span class="o">=&gt;</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>            <span class="p">]);</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;submit&#39;</span><span class="p">,</span> <span class="s1">&#39;submit&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">setAttribs</span><span class="p">([</span><span class="s1">&#39;value&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;send&#39;</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$filter</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getFilter</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">addSoftRule</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="nv">$filter</span><span class="o">::</span><span class="na">IS</span><span class="p">,</span> <span class="s1">&#39;string&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">addSoftRule</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="nv">$filter</span><span class="o">::</span><span class="na">IS</span><span class="p">,</span> <span class="s1">&#39;strlenMin&#39;</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">addSoftRule</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">,</span> <span class="nv">$filter</span><span class="o">::</span><span class="na">IS</span><span class="p">,</span> <span class="s1">&#39;email&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">addSoftRule</span><span class="p">(</span><span class="s1">&#39;url&#39;</span><span class="p">,</span> <span class="nv">$filter</span><span class="o">::</span><span class="na">IS</span><span class="p">,</span> <span class="s1">&#39;url&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">addSoftRule</span><span class="p">(</span><span class="s1">&#39;message&#39;</span><span class="p">,</span> <span class="nv">$filter</span><span class="o">::</span><span class="na">IS</span><span class="p">,</span> <span class="s1">&#39;string&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">addSoftRule</span><span class="p">(</span><span class="s1">&#39;message&#39;</span><span class="p">,</span> <span class="nv">$filter</span><span class="o">::</span><span class="na">IS</span><span class="p">,</span> <span class="s1">&#39;strlenMin&#39;</span><span class="p">,</span> <span class="mi">6</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the filter object and pass it on instantiation of form.</p>

<p>Please note that the $rootpath in this example is just above the vendor
folder of the composer.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$filter</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Domicile\Example\Filter</span><span class="p">(</span>
</span><span class='line'>    <span class="k">new</span> <span class="nx">RuleLocator</span><span class="p">(</span><span class="nb">array_merge</span><span class="p">(</span>
</span><span class='line'>        <span class="k">require</span> <span class="nv">$rootpath</span> <span class="o">.</span> <span class="s1">&#39;/vendor/aura/filter/scripts/registry.php&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="p">[</span><span class="s1">&#39;any&#39;</span> <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="nv">$rule</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">\Aura\Filter\Rule\Any</span><span class="p">;</span>
</span><span class='line'>            <span class="nv">$rule</span><span class="o">-&gt;</span><span class="na">setRuleLocator</span><span class="p">(</span><span class="k">new</span> <span class="nx">RuleLocator</span><span class="p">(</span>
</span><span class='line'>                <span class="k">require</span> <span class="nv">$rootpath</span> <span class="o">.</span> <span class="s1">&#39;/vendor/aura/filter/scripts/registry.php&#39;</span>
</span><span class='line'>            <span class="p">));</span>
</span><span class='line'>            <span class="k">return</span> <span class="nv">$rule</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}]</span>
</span><span class='line'>    <span class="p">)),</span>
</span><span class='line'>    <span class="k">new</span> <span class="nx">Translator</span><span class="p">(</span><span class="k">require</span> <span class="nv">$rootpath</span> <span class="o">.</span> <span class="s1">&#39;/vendor/aura/filter/intl/en_US.php&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$form</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Domicile\Example\ContactForm</span><span class="p">(</span><span class="k">new</span> <span class="nx">Builder</span><span class="p">,</span> <span class="nv">$filter</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>The <a href="http://auraphp.com/Aura.Input/">Aura.Input</a> has two methods we can make use.</p>

<p>1 ) fill() method helps us to fill the data values</p>

<p>2 ) filter() method which helps to filter and validate data according to
the rules specified in the form.</p>

<p>The code will looks like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nv">$_POST</span> <span class="o">&amp;&amp;</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">&#39;submit&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;send&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$data</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">$form</span><span class="o">-&gt;</span><span class="na">fill</span><span class="p">(</span><span class="nv">$data</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$form</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">//</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s2">&quot;Yes successfully validated and filtered&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="nb">var_dump</span><span class="p">(</span><span class="nv">$data</span><span class="p">);</span>
</span><span class='line'>        <span class="k">exit</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The form element gives you hints for the view. An example from the above</p>

<h2>Hints for the view</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1">// get the hints for the name field</span>
</span><span class='line'><span class="nv">$hints</span> <span class="o">=</span> <span class="nv">$form</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// the hints array looks like this:</span>
</span><span class='line'><span class="nv">$hints</span> <span class="o">=</span> <span class="k">array</span> <span class="p">(</span>
</span><span class='line'>  <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;text&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;name&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;attribs&#39;</span> <span class="o">=&gt;</span>
</span><span class='line'>  <span class="k">array</span> <span class="p">(</span>
</span><span class='line'>    <span class="s1">&#39;id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;name&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;maxlength&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>  <span class="p">),</span>
</span><span class='line'>  <span class="s1">&#39;options&#39;</span> <span class="o">=&gt;</span>
</span><span class='line'>  <span class="k">array</span> <span class="p">(</span>
</span><span class='line'>  <span class="p">),</span>
</span><span class='line'>  <span class="s1">&#39;value&#39;</span> <span class="o">=&gt;</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Without using Aura.View completely</h2>

<p>If you are not planning to use Aura.View entirely as templating, you can
make use of <a href="http://auraphp.com/Aura.View/">Aura.View</a> helpers which can render to make the form.</p>

<p>For that you need to instantiate <code>Aura\View\HelperLocator</code> and get the
field object as below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$helper</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Aura\View\HelperLocator</span><span class="p">([</span>
</span><span class='line'>    <span class="s1">&#39;field&#39;</span>         <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="nx">Aura\View\Helper\Form\Field</span><span class="p">(</span>
</span><span class='line'>            <span class="k">require</span> <span class="nb">dirname</span><span class="p">(</span><span class="nx">__DIR__</span><span class="p">)</span> <span class="o">.</span> <span class="s1">&#39;/vendor/aura/view/scripts/field_registry.php&#39;</span>
</span><span class='line'>        <span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s1">&#39;input&#39;</span>         <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="k">new</span> <span class="nx">Aura\View\Helper\Form\Input</span><span class="p">(</span>
</span><span class='line'>            <span class="k">require</span> <span class="nb">dirname</span><span class="p">(</span><span class="nx">__DIR__</span><span class="p">)</span> <span class="o">.</span> <span class="s1">&#39;/vendor/aura/view/scripts/input_registry.php&#39;</span>
</span><span class='line'>        <span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s1">&#39;radios&#39;</span>        <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="k">new</span> <span class="nx">Aura\View\Helper\Form\Radios</span><span class="p">(</span><span class="k">new</span> <span class="nx">Aura\View\Helper\Form\Input\Checked</span><span class="p">);</span> <span class="p">},</span>
</span><span class='line'>    <span class="s1">&#39;repeat&#39;</span>         <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="k">new</span> <span class="nx">Aura\View\Helper\Form\Repeat</span><span class="p">(</span>
</span><span class='line'>            <span class="k">require</span> <span class="nb">dirname</span><span class="p">(</span><span class="nx">__DIR__</span><span class="p">)</span> <span class="o">.</span> <span class="s1">&#39;/vendor/aura/view/scripts/repeat_registry.php&#39;</span>
</span><span class='line'>        <span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s1">&#39;select&#39;</span>        <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="k">new</span> <span class="nx">Aura\View\Helper\Form\Select</span><span class="p">;</span> <span class="p">},</span>
</span><span class='line'>    <span class="s1">&#39;textarea&#39;</span>      <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="k">new</span> <span class="nx">Aura\View\Helper\Form\Textarea</span><span class="p">;</span> <span class="p">},</span>
</span><span class='line'><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$field</span> <span class="o">=</span> <span class="nv">$helper</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;field&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="nv">$field</span><span class="p">(</span><span class="nv">$form</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">));</span>
</span><span class='line'><span class="k">echo</span> <span class="nv">$field</span><span class="p">(</span><span class="nv">$form</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;message&#39;</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// echo $field($form-&gt;get(&#39;form-element&#39;));</span>
</span></code></pre></td></tr></table></div></figure>


<p>The above will output something like</p>

<p><code>&lt;input id="name" type="text" name="name" size="20" maxlength="20" /&gt;</code></p>

<h2>Using Aura.View</h2>

<p>But you can use <a href="http://auraphp.com/Aura.View/">Aura.View</a> to render it nicely. An example is</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>    <span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">field</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">form</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">));</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>You can still look more closely on the <a href="https://github.com/harikt/phpform/blob/master/templates/default.php">templates</a> to see how it is used
in the example.</p>

<p>If you have any problems or confusions, let me know by comments.
I will try to address the same.</p>

<p>I would like to express huge Thanks to Paul M Jones for spending his
valuable time on the project, giving valuable feedback on the implementations.</p>

<p>Happy PhPing!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Seriously? Tab Vs Spaces]]></title>
    <link href="http://harikt.com/blog/2013/02/27/seriously-tab-vs-spaces/"/>
    <updated>2013-02-27T07:38:00+05:30</updated>
    <id>http://harikt.com/blog/2013/02/27/seriously-tab-vs-spaces</id>
    <content type="html"><![CDATA[<p>I have created a repo <a href="https://github.com/harikt/seriosuly">seriously</a>, and have <a href="https://github.com/harikt/seriosuly/commits/master">3 commits</a> as of now .</p>

<p>It has a file <a href="https://github.com/harikt/seriosuly/blob/master/hell.php">hell.php</a>. I have created it by logging into <code>user X</code>
and with vim as the editor without any settings in .vimrc.</p>

<p><img class="center" src="http://harikt.com/assets/images/vim-tab.png" title="vim with no settings, and used tab" alt="vim with no settings, and used tab"></p>

<p>Then from user <code>harikt</code> I have edited with vim which has some .vimrc
setting like 1 tab = 4 spaces. Look into the <a href="https://github.com/harikt/seriosuly/blob/master/hell.php">code</a> and see how beautiful
it is.</p>

<p>Opening with geany it looks</p>

<p><img class="center" src="http://harikt.com/assets/images/geany.png" title="Oh from geany with settings 1 tab = 4 spaces" alt="Oh from geany with settings 1 tab = 4 spaces"></p>

<p>Let us don&rsquo;t create problems, but solutions!</p>

<p>It is just one line you need to mention</p>

<p>&ldquo;According to your editor settings set 1 tab = 4 spaces.&rdquo; . no?</p>

<p>Or you don&rsquo;t need to convert the tab at all?</p>

<p>Is your tabs 4 spaces, 8 spaces, 2 spaces?</p>

<p>Please fork and commit with your favourite editor mentioning the settings,
editor in your commit.</p>

<p>As as user I prefer consistency . And as I work with Aura, Symfony2,
ZF1, ZF2 I love to follow spaces, than individual projects choosing their
own styles which is a main benefit probably mostly to its users like me
than the core developers of individual system who don&rsquo;t care about
other projects or its users?</p>

<p>After all when your project says we use tabs, do you care people who love
to use spaces there? Do you merge when something like this comes?</p>
]]></content>
  </entry>
  
</feed>
