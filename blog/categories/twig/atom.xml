<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Twig | Random thoughts | Hari KT]]></title>
  <link href="http://harikt.com/blog/categories/twig/atom.xml" rel="self"/>
  <link href="http://harikt.com/"/>
  <updated>2014-05-29T10:06:00+05:30</updated>
  <id>http://harikt.com/</id>
  <author>
    <name><![CDATA[Hari K T]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Making of Hari.Extras]]></title>
    <link href="http://harikt.com/blog/2012/11/24/node-224/"/>
    <updated>2012-11-24T21:22:00+05:30</updated>
    <id>http://harikt.com/blog/2012/11/24/node-224</id>
    <content type="html"><![CDATA[<p>If you have read my earlier posts, you know I started to love templating
library like Twig, Mustache etc. So I was interested to in-corporate Twig
or PhlyMustache or any sort of templating library to auraphp.</p>

<p><a href="https://github.com/auraphp/Aura.Web">Aura.Web</a> makes it easy to do
without much hassle. What you want to do is create the class which
extends the <code>Aura\Web\Renderer\AbstractRenderer</code> and have a exec() method.
For more details checkout <a href="https://github.com/auraphp/Aura.Web/tree/develop#data-and-rendering">Data and Rendering</a></p>

<pre><code>&lt;?php
namespace Vendor\Package\Web\Renderer;

use Aura\Web\Renderer\AbstractRenderer;

class YourRender extends AbstractRenderer
{
    public function exec()
    {
    }
}
</code></pre>

<p>And you should pass an object of Vendor\Package\Web\Renderer\YourRender to your controller.</p>

<p>Currently I have added support for <a href="http://twig.sensiolabs.org">Twig</a> in <a href="http://github.com/harikt/Hari.Extras">Hari.Extras</a> . I will be adding support for
PhlyMustache in the coming days. Hari.Extras comes with unit tests.</p>

<p>Running unit tests :
To run tests you should first install the dependencies. You can run
{syntaxhighlighter class=&ldquo;php&rdquo;}composer.phar install &mdash;dev{/syntaxhighlighter}
This will install the dependencies like Aura.Web, Aura.Framework, Twig, vfsstream etc in vendor folder.
Now you can run the phpunit from tests folder.</p>

<p>A big Thanks to @Paul M Jones and Chris Hartjes and all who have supported
one way or the other giving me tips and tricks, motivation to make this happen.
The nice thing is with composer for I don&rsquo;t need to keep everything in the tests folder.
 Thanks to @Jordi</p>

<p>By the way as <a href="https://github.com/auraphp">auraphp</a> is getting closer and closer for the next release
I am planning to start a series of posts to get started with using the components. Stay tuned :) .</p>
]]></content>
  </entry>
  
</feed>
