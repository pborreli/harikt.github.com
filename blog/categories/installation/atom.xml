<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Installation | Random thoughts | Hari KT]]></title>
  <link href="http://harikt.com/blog/categories/installation/atom.xml" rel="self"/>
  <link href="http://harikt.com/"/>
  <updated>2014-05-13T19:34:35+05:30</updated>
  <id>http://harikt.com/</id>
  <author>
    <name><![CDATA[Hari K T]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Installing Aura Framework Project via Composer]]></title>
    <link href="http://harikt.com/blog/2014/04/29/installing-aura-framework-project-via-composer/"/>
    <updated>2014-04-29T07:50:48+05:30</updated>
    <id>http://harikt.com/blog/2014/04/29/installing-aura-framework-project-via-composer</id>
    <content type="html"><![CDATA[<p>In this tutorial I am showing how to install aura framework project v2
via composer.</p>

<pre><code>composer create-project -s beta aura/framework-project path-to-project
</code></pre>

<p><a href="https://github.com/auraphp/Aura.Framework_Project">Aura.Framework_Project</a> helps
you to build web and cli applications.</p>

<p>If you need only web based application then
<a href="https://github.com/auraphp/Aura.Web_Project">Aura.Web_Project</a>
is what you need.</p>

<p><div class="embed-video-container"><iframe src="http://showterm.io/b971330ea7fd28d22e2f3 "></iframe></div></p>

<p>If you need only cli, then <a href="https://github.com/auraphp/Aura.Cli_Project">Aura.Cli_Project</a> helps you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Aura Cli Project via Composer]]></title>
    <link href="http://harikt.com/blog/2014/04/29/installing-aura-cli-project-via-composer/"/>
    <updated>2014-04-29T07:50:37+05:30</updated>
    <id>http://harikt.com/blog/2014/04/29/installing-aura-cli-project-via-composer</id>
    <content type="html"><![CDATA[<p>In this tutorial I am showing how to install aura cli project v2
via composer.</p>

<pre><code>composer create-project -s beta aura/cli-project path-to-project
</code></pre>

<p><a href="https://github.com/auraphp/Aura.Cli_Project">Aura.Cli_Project</a> help
you to build cli ( command line ) applications.</p>

<p><div class="embed-video-container"><iframe src="http://showterm.io/4baa2e4db41b12786a7ce "></iframe></div></p>

<p>If you need only web based application then
<a href="https://github.com/auraphp/Aura.Web_Project">Aura.Web_Project</a>
is what you need.</p>

<p>If you need web and cli, then
<a href="https://github.com/auraphp/Aura.Framework_Project">Aura.Framework_Project</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Aura Web Project via Composer]]></title>
    <link href="http://harikt.com/blog/2014/04/29/installing-aura-web-project-via-composer/"/>
    <updated>2014-04-29T07:50:30+05:30</updated>
    <id>http://harikt.com/blog/2014/04/29/installing-aura-web-project-via-composer</id>
    <content type="html"><![CDATA[<p>In this tutorial I am showing how to install aura web project v2
via composer.</p>

<pre><code>composer create-project -s beta aura/web-project path-to-project
</code></pre>

<p><a href="https://github.com/auraphp/Aura.Web_Project">Aura.Web_Project</a> helps
you to build web based application. If you need web and cli then
<a href="https://github.com/auraphp/Aura.Framework_Project">Aura.Framework_Project</a>
is what you need.</p>

<p><div class="embed-video-container"><iframe src="http://showterm.io/ca62d66745c55a80780bc "></iframe></div></p>

<p>If you need only cli, then <a href="https://github.com/auraphp/Aura.Cli_Project">Aura.Cli_Project</a> helps you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thoughts on Installing Zend Framework via Composer]]></title>
    <link href="http://harikt.com/blog/2012/09/10/thoughts-on-installing-zend-frameowork-via-composer/"/>
    <updated>2012-09-10T11:04:00+05:30</updated>
    <id>http://harikt.com/blog/2012/09/10/thoughts-on-installing-zend-frameowork-via-composer</id>
    <content type="html"><![CDATA[<p>Note : First I thought of creating an issue, and it was not in github. These are not serious issues, but just my thoughts when installing ZF2 via composer. I am not sure whether its composer related or the way the zf2 is packaged to do it via composer. Normally the composer.json will be something like {syntaxhighlighter class} hari@local:/var/www/composer/zf2$ cat composer.json { &ldquo;require&rdquo;: { &ldquo;zendframework/zend-form&rdquo;: &ldquo;2.0&rdquo; } } hari@local:/var/www/composer/zf2$ php ../composer.phar install Loading composer repositories with package information Installing dependencies &ndash; Installing zendframework/zendframework (2.0.0) Downloading: 25%^C hari@local:/var/www/composer/zf2$ ^C {/syntaxhighlighter} But you can see the composer tries to install the whole zend-framework. The problem is you need to add some more lines for its hosted in packages.framework.com and not in packagist.org . So your composer.json will be as below . {syntaxhighlighter class} hari@local:/var/www/composer/zf2$ cat composer.json { &ldquo;repositories&rdquo;: [ { &ldquo;type&rdquo;: &ldquo;composer&rdquo;, &ldquo;url&rdquo;: &ldquo;<a href="http://packages.zendframework.com/">http://packages.zendframework.com/</a>&rdquo; } ], &ldquo;require&rdquo;: { &ldquo;zendframework/zend-form&rdquo;: &ldquo;2.0&rdquo; } } hari@local:/var/www/composer/zf2$ php ../composer.phar install Loading composer repositories with package information Installing dependencies &ndash; Installing zendframework/zend-form (2.0.0) Downloading: 100% zendframework/zend-form suggests installing zendframework/zendservice-recaptcha (ZendService\ReCaptcha component) Writing lock file Generating autoload files {/syntaxhighlighter} Great you installed the zf2 form component. Now you can see where the form is installed . {syntaxhighlighter class} hari@local:/var/www/composer/zf2$ ls vendor/ autoload.php composer zendframework hari@local:/var/www/composer/zf2$ ls vendor/zendframework/ zend-form hari@local:/var/www/composer/zf2$ ls vendor/zendframework/zend-form/ Zend hari@local:/var/www/composer/zf2$ ls vendor/zendframework/zend-form/Zend/ Form hari@local:/var/www/composer/zf2$ ls vendor/zendframework/zend-form/Zend/Form/ Annotation FieldsetInterface.php composer.json Fieldset.php Element FieldsetPrepareAwareInterface.php ElementInterface.php FormFactoryAwareInterface.php Element.php FormInterface.php ElementPrepareAwareInterface.php Form.php Exception TODO.md Factory.php View {/syntaxhighlighter} Assume you have more zf2 packages which you have added. At a later point you think of installing the framework as a whole itself than adding more packages in the composer.json . So your composer.json will be some what like {syntaxhighlighter class} hari@local:/var/www/composer/zf2$ cat composer.json { &ldquo;repositories&rdquo;: [ { &ldquo;type&rdquo;: &ldquo;composer&rdquo;, &ldquo;url&rdquo;: &ldquo;<a href="http://packages.zendframework.com/">http://packages.zendframework.com/</a>&rdquo; } ], &ldquo;require&rdquo;: { &ldquo;zendframework/zendframework&rdquo;: &ldquo;2.0&rdquo; } } hari@local:/var/www/composer/zf2$ php ../composer.phar update Loading composer repositories with package information Updating dependencies &ndash; Removing zendframework/zend-form (2.0.0) &ndash; Installing zendframework/zendframework (2.0.0) Downloading: 100% Writing lock file Generating autoload files {/syntaxhighlighter} The form has been removed and framework is installed. Lets have a look where its installed . {syntaxhighlighter class} hari@local:/var/www/composer/zf2$ ls vendor/ autoload.php composer zendframework hari@local:/var/www/composer/zf2$ ls vendor/zendframework/ zend-form hari@local:/var/www/composer/zf2$ cat composer.json { &ldquo;repositories&rdquo;: [ { &ldquo;type&rdquo;: &ldquo;composer&rdquo;, &ldquo;url&rdquo;: &ldquo;<a href="http://packages.zendframework.com/">http://packages.zendframework.com/</a>&rdquo; } ], &ldquo;require&rdquo;: { &ldquo;zendframework/zendframework&rdquo;: &ldquo;2.0&rdquo; } } hari@local:/var/www/composer/zf2$ ls vendor/zendframework/zend-form/ Zend hari@local:/var/www/composer/zf2$ ls vendor/zendframework/zend-form/Zend/ Form hari@local:/var/www/composer/zf2$ ls vendor/zendframework/zend-form/Zend/Form/ bin INSTALL.md README-DEV.md resources composer.json library README-GIT.md tests demos LICENSE.txt README.md vendor hari@local:/var/www/composer/zf2$ ls vendor/zendframework/zend-form/Zend/Form/library/ Zend hari@local:/var/www/composer/zf2$ ls vendor/zendframework/zend-form/Zend/Form/library/Zend/ Authentication Di InputFilter Mvc Stdlib Barcode Dom Json Navigation Tag Cache Escaper Ldap Paginator Text Captcha EventManager Loader Permissions Uri Code Feed Log ProgressBar Validator Config File Mail Serializer Version Console Filter Math Server View Crypt Form Memory ServiceManager XmlRpc Db Http Mime Session Debug I18n ModuleManager Soap {/syntaxhighlighter} You can notice its going on the wrong place. vendor/zendframework/zend-form . I am not sure whether every one needs to remove all the installed packages to install the framework . It seems possible with naming zendframework/package . Thus it don&rsquo;t remove the installed packages. May be there are some other issues related to it for the naming of zendframework/zend-form like that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Configuring Zendframework 1.9 in GNU/Linux or Any]]></title>
    <link href="http://harikt.com/blog/2009/10/13/configuring-zendframework-gnulinux-or-any/"/>
    <updated>2009-10-13T23:28:00+05:30</updated>
    <id>http://harikt.com/blog/2009/10/13/configuring-zendframework-gnulinux-or-any</id>
    <content type="html"><![CDATA[<p>I got some request from some people asking how to configure / install zendframework 1.9 . Though its easy to do, I thought of writing it as some one who is lookingmay get some help . If you are new configuring PHP consider installing LAMP , WAMP or XAMPP . XAMPP comes with zend framework . So no need to do much work . If you in GNU/Linux you can go and get php , apache , mysql , phpmyadmin through synaptic or mannually download and configure it .  1 ) I hope you have the server LAMP or WAMP or MAMP is ready and running .  2 ) If you are using GNU/Linux use the command locate php.ini file , windows guys search it , you don&rsquo;t need commands right ?  Open it in your editor . GNU/Linux guys can do in vim or gedit . Search for the keyword include_path and add your zend framework location . I assume it as /var/ZendFramework/library . You can place anywhere and its not a big deal .  ; UNIX: &ldquo;/path1:/path2&rdquo; ;include_path = &ldquo;.:/usr/share/php&rdquo; include_path = &ldquo;.:/var/ZendFramework/library&rdquo; ; ; Windows: &ldquo;\path1;\path2&rdquo; ;include_path = &ldquo;.;c:\php\includes&rdquo;  As I am from GNU/Linux I uncommented the line and added the path where the zendframework library is located . Windows guys can add your folder path to zendframework library .  3 ) Now you have done . If you need the zf command , then you have to do some more .  Make a symbolic link and place in the /bin . That is # ln -s /var/ZendFramework/bin/zf.sh /bin/zf  If you are in windows you need to add environment variables ( Right click on My computer &ndash; > Properties &ndash;> Settings tab ( I think ) Don&rsquo;t ask me more about it , you may need to google search. Search for adding environment variables in java , as the process is same ) . So will be easy to run command from any where as # zf &lt;command> . Else you may need to give the full path where zendframework is placed. Like  /var/ZendFramework/bin/zf.sh or c:\ZendFramework\bin\zf.bat if you are in windows . ( Hope you have zendframework in c drive ) .  Now its ready to use your zendframework 1.9 for your projects . You have successfully installed and configured your Zendframework 1.9 . Any trouble in GNU/Linux let me know . I will help you configuring it .  *Note : You must be root and must restart apache after you have done completely .</p>
]]></content>
  </entry>
  
</feed>
