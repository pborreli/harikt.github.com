<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: lithium | Random thoughts | Hari KT]]></title>
  <link href="http://harikt.com/blog/categories/lithium/atom.xml" rel="self"/>
  <link href="http://harikt.com/"/>
  <updated>2013-10-30T15:20:28+05:30</updated>
  <id>http://harikt.com/</id>
  <author>
    <name><![CDATA[Hari K T]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Adding HTML Purifier Library in Lithium]]></title>
    <link href="http://harikt.com/blog/2011/03/12/adding-html-purifier-library-lithium/"/>
    <updated>2011-03-12T08:06:00+05:30</updated>
    <id>http://harikt.com/blog/2011/03/12/adding-html-purifier-library-lithium</id>
    <content type="html"><![CDATA[<p>Hope everyone knows about <a href="http://htmlpurifier.org/">HTMLPurifier</a> and why its used. Martin Brampton&rsquo;s new book <a href="https://www.packtpub.com/php-5-cms-framework-development-second-edition/book">PHP 5 CMS Framework Development</a> includes a discussion of using HTML Purifier in your content managementsystem.  Today I thought of adding HTMLPurifier to Lithium . Its easy but sometimes we may want to look the autoloader and how its implemented. So this is a small contribution from me.  There is also another way. ie go and clone <a href="https://github.com/harikt/li3_htmlpurifier.">https://github.com/harikt/li3_htmlpurifier.</a> Download all the files to HTMLPurifier . And add Libraries::add(&lsquo;li3_htmlpurifier&rsquo;);  Hope you liked :&ndash;) . Have fun .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Relationship support in Lithium aka li3]]></title>
    <link href="http://harikt.com/blog/2011/03/10/relationship-support-lithium-aka-li3/"/>
    <updated>2011-03-10T08:37:00+05:30</updated>
    <id>http://harikt.com/blog/2011/03/10/relationship-support-lithium-aka-li3</id>
    <content type="html"><![CDATA[<p>So now some of the relationship support has been there in lithium&rsquo;s x-relationships branch . I was talking with Howard Lince and Nateabele about the progress in relationships .  You can see the updated roadmap <a href="http://dev.lithify.me/lithium/wiki/about/roadmap">here</a> .  So lets start playing with relationships right ?  Currently we have  1 ) hasOne => 1 to 1  2 ) hasMany = > 1 to N  3 ) belongsTo => N to 1 or 1 to 1  4 ) HABTM work in progress  Eg 1 : A user has one profile . hasOne  Eg 2 : A user has many posts  Eg 3 : A user has many comments  Eg 4 : Single or many comments belongs to user .  Eg 5 : A single or many posts belongs to user .  Currently as the work for relationships is in progress I cannot point you to <a href="http://lithify.me/docs.">http://lithify.me/docs.</a> But Cake PHP has good documentation of the concepts. You can read it from <a href="http://book.cakephp.org/view/1039/Associations-Linking-Models-">cakephp</a>  I am going to show only some snippets of code how to create relationships. Once you have done with it , you will be a master.  Note :The command &ldquo;li3 create model&rdquo; previoulsy was creating models as singular. But from now onwards its Plural, so the command may be creating singular named file. So you need to do the necessary changes , will be fixed soon before 1.0 release.  We are moving to x-relationships branch. ie  $git checkout x-relationships  What I am going to show is relationship with user and post and user with comments. I assume only registered users can add posts and comments .  So lets dive into it .  Below is the table structure  Now you want to create Comments , Posts , Users models in your app/models folder .  Comments are posted for a particular post by a user .  So we are relating it via variable belongsTo . It must be public.  The $_schema is the array which is the same order the fields are created in table.  The $validates array contains the validations needed.  A user can post many comments and posts . Here in hasMany we have shown the relationship to the other .But its not needed as lithium is smart enough to know your foreign key relationships if you followed it.  Lithium uses filters. Filters are essentially an efficient way of introducing event-driven communication between classes in your application. You can read over <a href="http://dev.lithify.me/drafts/source/en/02_lithium_basics/02_filters.wiki">filters</a> .  So in your controllers action , you can fetch data like the below.  The Post::find() fetches the post of that particular id and the user who posted it .The Comments::find() fetches the comments and the user who posted it .  If you are storing the users name , email etc in comments table and not like the one I showed then the best way is to add Comments also to the with in Post::find()  A print_r for $post->data() will show the values. You can use a filter to check whether a query is fired and dump the query.  Add the below code in bootstrap.php  Thanks to Nate Abele , Howard and all my #li3 friends who helped me to make this post.  You can see the whole things over <a href="https://github.com/harikt/li3_tests">https://github.com/harikt/li3_tests</a> . More experiments will be added to it :) .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A local search for the li3_docs with Zend_Search_Lucene]]></title>
    <link href="http://harikt.com/blog/2011/01/20/local-search-li3docs-zendsearchlucene/"/>
    <updated>2011-01-20T20:25:00+05:30</updated>
    <id>http://harikt.com/blog/2011/01/20/local-search-li3docs-zendsearchlucene</id>
    <content type="html"><![CDATA[<p>Oh I am lazy for not posting my second cup of lithium over here . But you can check something over <a href="http://dev.lithify.me/forks/harikt/lithium_blog/wiki/home">http://dev.lithify.me/forks/harikt/lithium_blog/wiki/home</a> . So you know I am a fan boy of Lithium. I used to hang on #li3 irc just for fun, though I am not developing anything serious with lithium for now .  We used to read the documentation with the help of li3_docs plugin. Its so cool. But searching locally was not possible. If you have internet connection then it may not be a trouble too :) . Questions come and go, sometimes we may be knowing where we read it, but don&rsquo;t remember the exact controller action or the property. Oh my :&ndash;)  So I finally decided to hack on li3_docs plugin to make a search locally with the help of the Zend_Search_Lucene &rsquo;s power . You can read more about <a href="http://framework.zend.com/manual/en/zend.search.lucene.overview.html">Zend Lucene component over here</a>. This is also a good point to show you that anything can be integrated with li3 ;). So no more blha blha blha . Just codes coming on the way .  First you need to create the index pointing to /searches/makeindex . Before doing that change the url according to yours. For now I assume <a href="http://lithium.local/docs/">http://lithium.local/docs/</a> which is the only part I have hard coded. Nate has agreed to look into it and make the necessary changes and we will try to make it as plugin if he loves :&ndash;). So the files are below. I hope know something about li3, li3_docs etc. This uses the extractor from li3_docs :&ndash;)  You can see how I have included the Zend library as from <a href="http://dev.lithify.me/lithium/wiki/guides/using/zend">http://dev.lithify.me/lithium/wiki/guides/using/zend</a>  Do create an empty file makeindex.html.php in the searches folder of view before creating index.  Now do your way, may be add a form and point to the controller and action or what ever you love. As always licensed under the same licene of <a href="http://lithify.me/">http://lithify.me/</a> . Hang on to #li3 on irc.freenode.net to ask anything more on it :&ndash;) .  Note : Set time limit to 0 . ie  set_time_limit( 0 ); in bootstrap.php for creating the index. The methods are called recursively and needs sometime to create the index . Once indexed you don&rsquo;t want , just query through it .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Your first cup of Lithium]]></title>
    <link href="http://harikt.com/blog/2010/10/31/your-first-cup-lithium/"/>
    <updated>2010-10-31T08:14:00+05:30</updated>
    <id>http://harikt.com/blog/2010/10/31/your-first-cup-lithium</id>
    <content type="html"><![CDATA[<p><a href="http://www.flickr.com/photos/harikt/4205957193/" title="lithium_php_framework by K T Hari, on Flickr"><img src="http://farm3.static.flickr.com/2697/4205957193_e0e75b521a_m.jpg" alt="Lithium PHP 5.3 framework who loves RAD" /></a>So I hope all of you know that on 22nd July 2010, the <a href="http://www.php.net/archive/2010.php#id2010-07-22-1fvf">php.net</a> announced the end of release cycle of 5.2 series ( &ldquo;This release marks the end of the active support for PHP 5.2. Following this release the <strong><em>PHP 5.2 series will receive no further active bug maintenance</em></strong>. <strong><em>Security</em></strong> fixes for PHP 5.2 <strong><em>might</em></strong> be published on a case by cases basis. All users of PHP 5.2 are encouraged to <strong>upgrade to PHP 5.3</strong>.&lsquo; )  There are lots of beneficts when moving to PHP 5.3 series. 5.3 is completely rewritten core, improved speed and memory utilization. For developers you need to learn something more <img src="http://harikt.com/sites/all/libraries/fckeditor/editor/images/smiley/msn/wink_smile.gif" alt="image" />  . We have <a href="http://in3.php.net/manual/en/language.namespaces.php">namespaces</a> , <a href="http://in3.php.net/manual/en/language.oop5.late-static-bindings.php">Late Static Bindings</a> ,   <a href="http://in3.php.net/manual/en/control-structures.goto.php">jump labels</a> (limited goto) , <a href="http://in3.php.net/manual/en/functions.anonymous.php">Closures</a> (Lambda/Anonymous functions),  new magic methods, <a href="http://in3.php.net/manual/en/language.oop5.overloading.php#language.oop5.overloading.methods">__callStatic</a> and <a href="http://in3.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.invoke">__invoke</a> ,  <a href="http://in3.php.net/manual/en/language.types.string.php#language.types.string.syntax.nowdoc">Nowdoc</a> , <a href="http://in3.php.net/manual/en/language.constants.syntax.php">Constants</a> can now be declared outside a class using the <em>const</em> keyword,   <a href="http://in3.php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary">ternary</a> operator now has a shorthand form: <em>?:</em>. , <a href="http://in3.php.net/manual/en/language.exceptions.php">Exceptions</a> can now be nested ,  garbage collector for circular references has been added, and is enabled by default etc . You can look the <a href="http://in3.php.net/manual/en/migration53.new-features.php">new features</a> added on php.net . So before you jump to start looking for a new 5.3 series framework  you have to know what the above are .  You can use the <a href="http://in3.php.net/migration53">migration guide</a> on php.net to move your apps from 5.2 to 5.3 series . Some of the changes are <a href="http://in3.php.net/manual/en/migration53.incompatible.php">backward incompatible</a> so will break <img src="http://harikt.com/sites/all/libraries/fckeditor/editor/images/smiley/msn/cry_smile.gif" alt="image" /> .  Now the game starts , we have a bunch of frameworks started with PHP4 , PHP5 and now on 5.3 . Lithium is stable and many of the apps are working on top of it . Lithium has some core developers who are from Cake , Zend framework etc . And some of them were the leads of that framework. So its not brought to you by some one who don&rsquo;t have any knowledge in PHP or the community . So you have a reason to look right ? Also Lithium uses <a href="http://groups.google.com/group/php-standards">PSR-0 Final Proposal</a> of the PHP Standards Working Group, so you can bring your favourite piece of cake from any other frameworks like Doctrine , Symfony , Zend or any other which follows it . Try not to select a framework which doesnot follow the proposal and after all its your wish <img src="http://harikt.com/sites/all/libraries/fckeditor/editor/images/smiley/msn/shades_smile.gif" alt="image" />.  About the documentation: Ya , there is lots to do in the documentation part , but you can use the li3_docs plugin to read all the doc block comments from the core . The core of the framework is almost compelely documented . You can see how it works from <a href="http://lithify.me/docs">http://lithify.me/docs</a> . The installation guide is here <a href="http://rad-dev.org/lithium/wiki/guides/installation">http://rad-dev.org/lithium/wiki/guides/installation</a> . Its well written so I feel there is nothing I want to introduce here .  One you grabbed your copy you can download the li3_docs plugin to libraries folder and add the line Libraries::add('li3_docs&rsquo;); at the end of config/bootstrap/library.php .  I hope you have already pointed your application to the webroot . If not some code below by <a href="http://www.rmauger.co.uk/">Ryan Mauger</a> commonly known as <a href="http://twitter.com/Bittarman">Bittarman</a> on the zf community will help you . I got some help from Bittarman, and which have helped a lot on my future projects . So I hope this will help you too .  So li3 is the command line tool which created models, controllers and does many of them .  Creating for project is as easy .I hope you have already installed and configured Lithium and li3 command line tool as <a href="http://rad-dev.org/lithium/wiki/guides/installation">described</a>. Lets see how and the directory structure look .  Oh simple right ? Your project is ready . Now point it changing the above name blog with hellolithium and to webroot and not public as in the previous gist. Some times this command may not work , as we expects . So the easiest way is also making a copy of the app folder and changing the name to hellolithium or the name you love . I was having some trouble but Nate helped me to resolve the issues on #li3 on freenode . Though there are not a huge fans for li3 at present the support channel is superb . You will defnitely get some helping hands on it . Nate will also be publishing a tutorial soon , so I am also looking forward on it .  So one you have pointed to the webroot it will tell you to make the resources directory writeable. All you want to do is chmod 777 for the resources directory . Now you can change your database connections from the config/bootstrap/connections.php file. Lithium comes with support for mongodb as default. But you can also use other RDBMS like MySQL , Postgre etc or you can also use Doctrine <img src="http://harikt.com/sites/all/libraries/fckeditor/editor/images/smiley/msn/thumbs_up.gif" alt="image" /> . So its your wish to use what .  Moving to command line once again how to create controllers, models etc .  $li3 create &lt;name> will be creating controllers and models .  li3 create -i is used to create on an interactive way . ie once you issued , you will be getting a set of questions  $ li3 create -i What would you like to create? (model/view/controller/test/mock)  > model model could not be created.  I have not figured out why the error occurs. I know many of them are busy on their daily work . So I am looking into it , how it works and all . So you can see some other nice command line features soon on my blog.  Note : At the moment I am not a master in Li3, nor a contributor. So there may be errors from my part, sorry  and let me know if you see it and how I can resolve it .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Benefits of open source frameworks over custom frameworks]]></title>
    <link href="http://harikt.com/blog/2010/01/22/benefits-open-source-frameworks-over-custom-frameworks/"/>
    <updated>2010-01-22T11:25:00+05:30</updated>
    <id>http://harikt.com/blog/2010/01/22/benefits-open-source-frameworks-over-custom-frameworks</id>
    <content type="html"><![CDATA[<p><a href="http://www.flickr.com/photos/harikt/4294304881/" title="opensource_logo by K T Hari, on Flickr"><img src="http://farm5.static.flickr.com/4049/4294304881_87b173eb57_t.jpg" alt="opensource_logo" /></a>Recently I was arguing with one of my friend over the beneficts of opensource frameworks over custom . I know there may be lots of posts describing the beneficts and drawbacks . But I just thought of writing it as I can say I have written about that in my blog. You can check it out .  I hope every one knows about <a href="http://www.opensource.org/docs/osd">opensource</a> and the <a href="http://www.opensource.org/licenses/alphabetical">licences</a> . I have been using and learning some of the most popular opensource frameworks like zend, lithium , drupal etc . So lets move on to what are the beneficts I feel .  Beneficts of open source :  1 ) Mainly community supported .  2 ) Coding standards will be followed .  3 ) Throughly tested and immediate patches will be available if any thing breaks .  4 ) Can get quick help from the community .  5 ) Flexible for maintaince ( ie not throw away prototyping )  6 ) Many do unit testing using the popular test tools like phpunit , simpletest etc .  Beneficts of custom :  1 ) Custom frameworks may be good for a developer as he knows what he has written . I don&rsquo;t think there is much beneficts for users .  Drawbacks of custom frameworks :  1 ) It will be developed by a single or some group of people.  2 ) May be tested by some group of peoples , but lacks the tests done by community ( mass of people )  3 ) Developing from scratch is not a big deal , but maintainence is the one that&rsquo;s costly than development . When its custom made , you may need to get the exact people for that . Else its like &ldquo;too many cooks spoil the broothe&rdquo;. Pretty enough community developers, so not a big deal to get one.  4 ) May or may not be flexible . For example lets compare with drupal . When you starts your project , you may have thought just a small blog , then later you thought of having forums , after that you thought you need to sell some goods.  When its drupal like framework , its easy as you just need to maintain the common code base which comes with much of the features and some other contributed and custom modules will make everything fine . But when its custom , you may need to mess with the code , or may need to go extending it , which is not so easy like drupal or any other .  These are what I feel for now . May be more points , but for the time I am not remebering it . If any one feels I missed any , please add your comments I will update it .</p>
]]></content>
  </entry>
  
</feed>
